[{"path":"https://motrpac.github.io/MotrpacBicQC/articles/other_functions.html","id":"data-objects","dir":"Articles","previous_headings":"","what":"Data Objects","title":"MotrpacBicQC: Other Functions","text":"following data objects available Colors Abbreviations assay_abbr: assay abbreviations assay_order: assay order group_abbr: group abbreviations group_cols: group colors sex_abbr: sex abbreviations sex_cols: sex colors tissue_abbr: tissue abbreviations tissue_cols: tissue colors tissue_order: tissue order Data objects generated Nicole Gay (@nicolerg) Animal tissue codes bic_animal_tissue_code assay_codes Phenotypes PASS1A phenotypes_pass1a06_short","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/other_functions.html","id":"help","dir":"Articles","previous_headings":"","what":"Help","title":"MotrpacBicQC: Other Functions","text":"Need extra help? Please, submit issue providing many details possible.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_lab.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"MotrpacBicQC: Clinical Chemistry Lab QC","text":"First, download install R RStudio: R RStudio (free version) , open RStudio install devtools package Finally, install MotrpacBicQC package","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"MoTrPAC/MotrpacBicQC\", build_vignettes = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_lab.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"MotrpacBicQC: Clinical Chemistry Lab QC","text":"Load library run following tests check package correctly installed works. example: generate following outputs:","code":"library(MotrpacBicQC) # Just copy and paste in the RStudio terminal.  check_metadata_samples_lab(df = metadata_metabolites_named) check_metadata_analyte(df = metadata_metabolites_named) check_results_assays(df = results_named, assay_type = \"lab\") - (-) `metadata_samples`: Expected COLUMN NAMES are missed: FAIL      The following required columns are not present: `sample_id, sample_type, sample_order, raw_file, extraction_date, acquisition_date`    - (-) `sample_id` column missing: FAIL    - (-) `sample_type` column missing: FAIL    - (-) `sample_order` column missing: FAIL    - (-) `raw_file` column missing: FAIL    - (-) `extraction_date` column missed: FAIL    - (-) `acquisition_date` column missed: FAIL    - (-) `metadata_analytes`: Expected COLUMN NAMES are missed: FAIL      The following required columns are not present: `analyte_name, uniprot_entry, assay_name`    - (-) `analyte_name` column missing: FAIL    - (-) `uniprot_entry` column missing: FAIL    - (-) `assay_name` column missing: FAIL    - (-) `analyte_name` column missing: FAIL    - (-) `results` contains non-numeric columns: FAIL          - metabolite_name   + ( ) Number of zeros in dataset: 14 (out of 5099 values)   + ( ) Number of NAs in dataset: 95 (out of 5194 values)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_lab.html","id":"how-to-test-your-datasets","dir":"Articles","previous_headings":"","what":"How to test your datasets","title":"MotrpacBicQC: Clinical Chemistry Lab QC","text":"Check full PROCESSED_YYYYMMDD folder (recommended). typical folder file structure look like : Run test full submission. , run following command: typical output look like :","code":"└── HUMAN     └── T02         ├── LAB_CK         │   ├── BATCH1_20221102         │   │   ├── PROCESSED_20221102         │   │   │   ├── metadata_analyte_named_CK_plasma.txt         │   │   │   ├── metadata_experimentalDetails_named_duke_ClinChem.txt         │   │   │   ├── metadata_sample_named_CK_plasma.txt         │   │   │   └── results_CK_plasma.txt         │   │   ├── metadata_failedsamples_20221102.txt         │   │   └── metadata_phase.txt         │   │   └── file_manifest_20240103.csv n_issues <- validate_lab(input_results_folder = \"/full/path/to/HUMAN/T02/LAB_CK/BATCH1_20221102/PROCESSED_20221102/\",                           cas = \"duke\",                          return_n_issues = TRUE,                          verbose = TRUE) # LAB Assay QC Report   + Site: duke   + Folder: `HUMAN/T02/LAB_CK/BATCH1_20221102/PROCESSED_20221102` + Motrpac phase reported: HUMAN-PRECOVID (info from metadata_phase.txt available): OK                  ## QC `metadata_analyte` file    + (+) File successfully opened   + (+) All required columns present   + (+) `analyte_name` unique values: OK   + (+) `uniprot_entry` unique values: OK   + Validating `uniprot_entry` IDs with the Uniprot database. Please wait...   + (+) All `uniprot_entry` IDs are valid: OK   + (+) `assay_name` unique values: OK  ## QC `metadata_sample` file    + (+) File successfully opened   + (+) All required columns present   + (+) `sample_id` unique values: OK   + (+) `sample_type` values are valid: OK   + (+) `sample_order` is numeric: OK   + (+) `raw_file` values are valid: OK   + (+) `extraction_date`: All dates are valid.   + (+) `acquisition_date`: All dates are valid.  ## QC `results` file    + (+) File successfully opened   + (+) `analyte_name` unique values: OK   + (+) All measurement columns are numeric: OK   + ( ) Number of zeros in dataset: 0 (out of 1438 values)   + ( ) Number of NAs in dataset: 0 (out of 1438 values)  ## Cross-File Validation    + (+) All sample IDs match between results and metadata samples: OK   + (+) All analyte IDs match between results and metadata analytes: OK  ## QC Plots    + (p) Plot QC plots: OK  ## QC `file_manifest_YYYYMMDD.csv` (required)    + (+) `file_name, md5` columns available in manifest file   + (+) `metadata-proteins` file included in manifest: OK   + (+) `metadata-samples` file included in manifest: OK   + (+) `results` file included in manifest: OK   ## DMAQC validation     + ( ) File [`metadata_failedsamples.*.txt`] not found    + ( ) NO FAILED SAMPLES reported  TOTAL NUMBER OF ISSUES: 0"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_lab.html","id":"help","dir":"Articles","previous_headings":"","what":"Help","title":"MotrpacBicQC: Clinical Chemistry Lab QC","text":"Additional details function can found typing, example: Need extra help? Please, submit issue providing many details possible.","code":"?validate_lab"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_metabolomics.html","id":"expected-submission","dir":"Articles","previous_headings":"","what":"Expected submission","title":"MotrpacBicQC: Metabolomics QC","text":"folder/file structure required metabolomics submission follows: following file relations…","code":"Example:  PASS1A-06/   T55/    HILICPOS/      metadata-phase.txt  ## Note: \"new\" required file     file_manifest_YYYYMMDD.txt     BATCH1_20190725/       RAW/       Manifest.txt       file1.raw       file2.raw       etc     PROCESSED_20190725/      metadata_failedsamples_[cas_specific_labeling].txt      NAMED/         results_metabolites_named_[cas_specific_labeling].txt          metadata_metabolites_named_[cas_specific_labeling].txt         metadata_sample_named_[cas_specific_labeling].txt         metadata_experimentalDetails_named_[cas_specific_labeling].txt      UNNAMED/ ## Note: Only required for untargeted assays         results_metabolites_unnamed_[cas_specific_labeling].txt         metadata_metabolites_unnamed_[cas_specific_labeling].txt         metadata_sample_unnamed_[cas_specific_labeling].txt         metadata_experimentalDetails_unnamed_[cas_specific_labeling].txt"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_metabolomics.html","id":"install-motrpacbicqc","dir":"Articles","previous_headings":"","what":"Install MotrpacBicQC","title":"MotrpacBicQC: Metabolomics QC","text":"First, download install R RStudio: R RStudio (free version) , open RStudio install devtools package Finally, install MotrpacBicQC package. Important: install every time run QCs ensure latest version used.","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"MoTrPAC/MotrpacBicQC\", build_vignettes = FALSE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_metabolomics.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"MotrpacBicQC: Metabolomics QC","text":"Load library run following tests check package correctly installed works. example: generate following output:","code":"library(MotrpacBicQC) # Just copy and paste in the RStudio terminal  check_metadata_metabolites(df = metadata_metabolites_named, name_id = \"named\") check_metadata_samples(df = metadata_sample_named, cas = \"umichigan\") check_results(r_m = results_named, m_s = metadata_sample_named, m_m = metadata_metabolites_named) check_metadata_metabolites(df = metadata_metabolites_named, name_id = \"named\") ##   + (+) All required columns present ##   + (+) `metabolite_name` OK ##   + (+) `refmet_name` unique values: OK ##   + Validating `refmet_name` (it might take some time) ##       (-) `refmet_name` [`Leucine/Isoleucine`] must be modified to the RefMet Standarized name: \"Leucine\" (Error RN2) ##       (-) `refmet_name` [`Oxoglutaric acid`] must be modified to the RefMet Standarized name: \"2-Oxoglutaric acid\" (Error RN2) ##       (-) `refmet_name` [`Citric acid/Isocitric acid`] must be modified to the RefMet Standarized name: \"Citric acid\" (Error RN2) ##       (-) Total number of missed ids on MW: 3 ##    - (-) SUMMARY: 3 `refmet_name` not found in RefMet Metabolomics Data Dictionary: FAIL ##   + (+) {rt} all numeric: OK ##   + (+) {mz} all numeric: OK ##   + (+) {`neutral_mass`} all numeric values OK ##   + (+) {formula} available: OK check_metadata_samples(df = metadata_sample_named, cas = \"umichigan\") ##    - (-) `metadata_sample`: recently required COLUMN NAMES are missed: Adding with NA values: FAIL ##   + (+) All required columns present ##   + (+) `sample_id` seems OK ##   + (+) `sample_type` seems OK ##   + (+) `sample_order` is numeric ##   + (+) `sample_order` unique values OK ##   + (+) `raw_file` unique values: OK ##    - (-) `extraction_date` has NA values: FAIL ##    - (-) `acquisition_date` has NA values: FAIL ##    - (-) NA values detected in column ` lc_column_id `: FAIL ##    - ( ) Number of unique values in column ` lc_column_id `:  1 check_results(r_m = results_named, m_s = metadata_sample_named, m_m = metadata_metabolites_named) ##   + (+) All samples from `results_metabolite` are available in `metadata_sample` ##   + (+) `metabolite_name` is identical in both [results] and `metadata_metabolites` files: OK ##   + (+) `sample_id` columns are numeric: OK"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_metabolomics.html","id":"how-to-process-a-metabolomics-dataset","dir":"Articles","previous_headings":"","what":"How to process a metabolomics dataset","title":"MotrpacBicQC: Metabolomics QC","text":"Two approaches available:","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_metabolomics.html","id":"check-full-processed_yyyymmdd-folder-recommended","dir":"Articles","previous_headings":"How to process a metabolomics dataset","what":"Check full PROCESSED_YYYYMMDD folder (recommended)","title":"MotrpacBicQC: Metabolomics QC","text":"Run test full submission. , run following command: cas can one followings: “broad_met” = Broad Metabolomics “emory” = Emory “mayo” = Mayo Clinic “umichigan” = Umichigan “gtech” = Georgia Tech “duke” = Duke function can also print number QC plots, including: sum intensity/concentration per sample Number identifications Sample Intensity/concentration distribution (boxplots) Total number samples Total number identifications (named/unnamed) , run like : recommended provide path folder pdf files saved (argument: out_qc_folder). doesn’t exist, created.","code":"validate_metabolomics(input_results_folder = \"/full/path/to/PROCESSED_YYYYMMDD\",                        cas = \"your_site_code\") validate_metabolomics(input_results_folder = \"/full/path/to/PROCESSED_YYYYMMDD\",                        cas = \"your_site_code\",                       f_proof = TRUE,                       out_qc_folder = \"/path/to/the/folder/to/save/plots/\",                       printPDF = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_metabolomics.html","id":"check-individual-files","dir":"Articles","previous_headings":"How to process a metabolomics dataset","what":"Check individual files","title":"MotrpacBicQC: Metabolomics QC","text":"rare case need process individual files, also can done. Cases: Check metadata metabolites: Check metadata samples: Check results, needs metadata metabolites samples","code":"# Open the metadata_metabolites file(s)  metadata_metabolites_named <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE) metadata_metabolites_unnamed <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE)  check_metadata_metabolites(df = metadata_metabolites_named, name_id = \"named\") check_metadata_metabolites(df = metadata_metabolites_unnamed, name_id = \"unnamed\") # Open your files metadata_sample_named <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE) metadata_sample_unnamed <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE)  check_metadata_samples(df = metadata_sample_named, cas = \"your_side_id\") check_metadata_samples(df = metadata_sample_unnamed, cas = \"your_side_id\") # Open your files metadata_metabolites_named <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE) metadata_sample_named <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE) results_named <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE)  check_results(r_m = results_named,                m_s = metadata_sample_named,                m_m = metadata_metabolites_named)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_metabolomics.html","id":"help","dir":"Articles","previous_headings":"","what":"Help","title":"MotrpacBicQC: Metabolomics QC","text":"Additional details function can found typing, example: Need extra help? Please, either contact BIC motrpac-helpdesk@lists.stanford.edu /submit issue providing many details possible","code":"?validate_metabolomics"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_olink.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"MotrpacBicQC: OLINK QC","text":"First, download install R RStudio: R RStudio (free version) , open RStudio install devtools package Finally, install MotrpacBicQC package","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"MoTrPAC/MotrpacBicQC\", build_vignettes = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_olink.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"MotrpacBicQC: OLINK QC","text":"Load library run following tests check package correctly installed works. example: generate following outputs:","code":"library(MotrpacBicQC) # Just copy and paste in the RStudio terminal.  check_metadata_samples_olink(df = metadata_metabolites_named) check_metadata_proteins(df = metadata_metabolites_named) check_results_assays(df = results_named, assay_type = \"olink\") - (-) `metadata_samples`: Expected COLUMN NAMES are missed: FAIL      The following required columns are not present: `sample_id, sample_type, sample_order, plate_id`    - (-) `sample_id` is missed: FAIL    - (-) `sample_type` column missed: FAIL    - (-) `plate_id` column missed: FAIL    - (-) `metadata_proteins`: Expected COLUMN NAMES are missed: FAIL      The following required columns are not present: `olink_id, uniprot_entry, assay, missing_freq, panel_name, panel_lot_nr, normalization`    - (-) `olink_id`: is missed: FAIL    - (-) `uniprot_entry` column missed: FAIL    - (-) `assay` column missed: FAIL    - (-) {missing_freq} column missed: FAIL    - (-) `panel_name` column missed: FAIL    - (-) `panel_lot_nr` column missed: FAIL    - (-) `normalization` column missed: FAIL    - (-) `olink_id` is missed: FAIL    - (-) `results.txt` contains non numeric columns: FAIL          - metabolite_name   + ( ) Number of zeros in dataset: NA (out of 5194 values)   + ( ) Number of NAs in dataset: 95 (out of 5194 values)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_olink.html","id":"how-to-test-your-datasets","dir":"Articles","previous_headings":"","what":"How to test your datasets","title":"MotrpacBicQC: OLINK QC","text":"Check full RESULTS_YYYYMMDD folder (recommended). typical folder file structure look like : Run test full submission. , run following command: typical output look like :","code":"HUMAN/ `-- T02     `-- PROT_OL         `-- BATCH1_20210825             |-- RESULTS_20221102             |   |-- MOTRPAC_HUMAN_T02_PROT_OL_GER_20210825_metadata-proteins.txt             |   |-- MOTRPAC_HUMAN_T02_PROT_OL_GER_20210825_metadata-samples.txt             |   `-- MOTRPAC_HUMAN_T02_PROT_OL_GER_20210825_results.txt             |-- file_manifest_20240103.csv             `-- metadata_phase.txt n_issues <- validate_olink(input_results_folder = \"/full/path/to/HUMAN/T02/PROT_OL/BATCH1_20210825/RESULTS_20221102\",                             cas = \"broad_rg\",                            return_n_issues = TRUE,                            verbose = TRUE) # OLINK QC report   + Site: broad_rg + Folder: `HUMAN/T02/PROT_OL/BATCH1_20210825/RESULTS_20221102` + Motrpac phase reported: HUMAN-PRECOVID (info from metadata_phase.txt available): OK                                                                    ## QC `metadata_proteins`    + (+) File successfully opened   + (+) All required columns present   + (+) `olink_id`: unique values: OK    - ( ) `uniprot_entry` non-unique values detected (n duplications = 3). This is OK          - P01375          - P05231          - P10145    - ( ) `assay` non-unique values detected (n duplications = 3). This is OK      - TNF      - IL6      - CXCL8   + (+) {missing_freq} all numeric: OK   + (+) {panel_name} checking available panels:      - Cardiometabolic      - Neurology      - Inflammation      - Oncology   + (+) {panel_lot_nr} checking available panels:      - B04409      - B04410      - B04407      - B04408   + (+) {normalization} checking available panels:      - Intensity  ## QC `metadata-samples.txt`    + (+) File successfully opened   + (+) All required columns present   + (+) `sample_id` seems OK   + (+) `sample_type` seems OK   + (+) `plate_id` is available: OK   + (+) `sample_order` is numeric: OK   + (+) All `plate_id` values have unique `sample_order` values: OK   ## QC `results.txt`    + (+) File successfully opened   + (+) `olink_id` seems OK   + (+) All columns (except `olink_id`) are  numeric: OK   + ( ) Number of zeros in dataset: 55 (out of 1105472 values)   + ( ) Number of NAs in dataset: 0 (out of 1105472 values)  ## Cross File Validation    + (+) All samples in `results.txt` are available in `metadata-samples.txt`   + (+) All `olink_id` from `results.txt` are available in `metadata-proteins.txt`  ## QC `file_manifest_YYYYMMDD.csv` (required)    + (+) `file_name, md5` columns available in manifest file   + (+) `metadata-proteins` file included in manifest: OK   + (+) `metadata-samples` file included in manifest: OK   + (+) `results` file included in manifest: OK   ## DMAQC validation     + ( ) File [`metadata_failedsamples.*.txt`] not found    + ( ) NO FAILED SAMPLES reported  TOTAL NUMBER OF ISSUES: 0"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_olink.html","id":"help","dir":"Articles","previous_headings":"","what":"Help","title":"MotrpacBicQC: OLINK QC","text":"Additional details function can found typing, example: Need extra help? Please, submit issue providing many details possible.","code":"?validate_olink"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_proteomics.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"MotrpacBicQC: Proteomics QC","text":"First, download install R RStudio: R RStudio (free version) , open RStudio install devtools package Finally, install MotrpacBicQC package","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"MoTrPAC/MotrpacBicQC\", build_vignettes = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_proteomics.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"MotrpacBicQC: Proteomics QC","text":"Load library run following tests check package correctly installed works. example: generate following outputs:","code":"library(MotrpacBicQC) # Just copy and paste in the RStudio terminal test <- check_ratio_proteomics(df_ratio = metadata_metabolites_named,                                 isPTM =  TRUE) test <- check_rii_proteomics(df_rri = metadata_metabolites_named,                               isPTM =  TRUE) test <- check_vial_metadata_proteomics(df_vm = metadata_metabolites_named) - (-) The following required columns are missed: ptm_id, protein_id, gene_symbol, entrez_id - (-) The following required columns are missed: protein_id, sequence, ptm_id, ptm_peptide, gene_symbol, entrez_id, confident_score, confident_site - (-) The following required columns are missed: vial_label, tmt_plex, tmt11_channel"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_proteomics.html","id":"how-to-test-your-datasets","dir":"Articles","previous_headings":"","what":"How to test your datasets","title":"MotrpacBicQC: Proteomics QC","text":"Two approaches available:","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_proteomics.html","id":"check-full-results_yyyymmdd-folder-recommended","dir":"Articles","previous_headings":"How to test your datasets","what":"Check full RESULTS_YYYYMMDD folder (recommended)","title":"MotrpacBicQC: Proteomics QC","text":"Run test full submission. , run following command: cas one followings: “broad_prot” = Broad Proteomics “pnnl” = PNNL","code":"|-- PASS1B-06 |   |-- T55 |   |   |-- PROT_PH |   |   |   `-- BATCH1_20200312 |   |   |       |-- RAW_20200312 |   |   |       |   |-- 01MOTRPAC_PASS1B-06_T55_PH_PN_20191231 |   |   |       |   |   |-- 01MOTRPAC_PASS1B-06_T55_PH_PN_201912319_MANIFEST.txt |   |   |       |   |   `-- 01MOTRPAC_PASS1B-06_T55_PH_PN_201912319_TMTdetails.txt |   |   |       |   |-- 02MOTRPAC_PASS1B-06_T55_PH_PN_20191231 |   |   |       |   |   |-- 02MOTRPAC_PASS1B-06_T55_PH_PN_201912319_MANIFEST.txt |   |   |       |   |   `-- 02MOTRPAC_PASS1B-06_T55_PH_PN_201912319_TMTdetails.txt |   |   |       |   |-- 03MOTRPAC_PASS1B-06_T55_PH_PN_20191231 |   |   |       |   |   |-- 03MOTRPAC_PASS1B-06_T55_PH_PN_201912319_MANIFEST.txt |   |   |       |   |   `-- 03MOTRPAC_PASS1B-06_T55_PH_PN_201912319_TMTdetails.txt |   |   |       |   |-- 04MOTRPAC_PASS1B-06_T55_PH_PN_20191231 |   |   |       |   |   |-- 04MOTRPAC_PASS1B-06_T55_PH_PN_201912319_MANIFEST.txt |   |   |       |   |   `-- 04MOTRPAC_PASS1B-06_T55_PH_PN_201912319_TMTdetails.txt |   |   |       |   |-- 05MOTRPAC_PASS1B-06_T55_PH_PN_20191231 |   |   |       |   |   |-- 05MOTRPAC_PASS1B-06_T55_PH_PN_201912319_MANIFEST.txt |   |   |       |   |   `-- 05MOTRPAC_PASS1B-06_T55_PH_PN_201912319_TMTdetails.txt |   |   |       |   `-- 06MOTRPAC_PASS1B-06_T55_PH_PN_20191231 |   |   |       |       |-- 06MOTRPAC_PASS1B-06_T55_PH_PN_201912319_MANIFEST.txt |   |   |       |       `-- 06MOTRPAC_PASS1B-06_T55_PH_PN_201912319_TMTdetails.txt |   |   |       |-- RESULTS_20200909 |   |   |       |   |-- MOTRPAC_PASS1B-06_T55_PH_PN_20200909_results_RII-peptide.txt |   |   |       |   |-- MOTRPAC_PASS1B-06_T55_PH_PN_20200909_results_ratio.txt |   |   |       |   `-- MOTRPAC_PASS1B-06_T55_PH_PN_20200909_vial_metadata.txt |   |   |       `-- file_manifest_20200910.csv validate_proteomics(input_results_folder = \"/full/path/to/RESULTS_YYYYMMDD\",                      cas = \"your_site_code\")  # in the example above... validate_proteomics(input_results_folder = \"/full/path/to/PASS1B-06/T55/PROT_PH/BATCH1_20200312/RESULTS_20200909\",                      cas = \"pnnl\",                     isPTM = TRUE,                     return_n_issues = FALSE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_proteomics.html","id":"check-individual-files","dir":"Articles","previous_headings":"How to test your datasets","what":"Check individual files","title":"MotrpacBicQC: Proteomics QC","text":"Check ratio resuls file Check proteomics reporter ion intensity file: Check proteomics vial metadata file","code":"# Open the ratio results file  proteomics_ratio_results <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE)  check_ratio_proteomics(df_ratio = proteomics_ratio_results,                         isPTM = TRUE,                         printPDF = FALSE) # Open your files proteomics_ratio_results <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE)  check_rii_proteomics(df_rri = proteomics_ratio_results, cas = \"your_side_id\") # Open your files vial_metadata <- read.delim(file = \"/path/to/your/file\", stringsAsFactors = FALSE)  check_vial_metadata_proteomics(df_vm = vial_metadata)"},{"path":"https://motrpac.github.io/MotrpacBicQC/articles/qc_proteomics.html","id":"help","dir":"Articles","previous_headings":"","what":"Help","title":"MotrpacBicQC: Proteomics QC","text":"Additional details function can found typing, example: Need extra help? Please, submit issue providing many details possible.","code":"?check_vial_metadata_proteomics"},{"path":"https://motrpac.github.io/MotrpacBicQC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Jimenez-Morales. Maintainer.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Center MB (2025). MotrpacBicQC: QC/QA functions MoTrPAC community. R package version 1.0.0, https://motrpac.github.io/MotrpacBicQC.","code":"@Manual{,   title = {MotrpacBicQC: QC/QA functions for the MoTrPAC community},   author = {MoTrPAC Bioinformatics Center},   year = {2025},   note = {R package version 1.0.0},   url = {https://motrpac.github.io/MotrpacBicQC}, }"},{"path":"https://motrpac.github.io/MotrpacBicQC/index.html","id":"motrpacbicqc","dir":"","previous_headings":"","what":"QC/QA functions for the MoTrPAC community","title":"QC/QA functions for the MoTrPAC community","text":"R package MoTrPAC community","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"QC/QA functions for the MoTrPAC community","text":"package provides set functions Primary Secondary QC/QA analysis datasets generated Metabolomics, Targeted, Untargeted Proteomics MoTrPAC Chemical Analysis Sites (CAS). also provides additional functions data objects analysis.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/index.html","id":"package-updates","dir":"","previous_headings":"","what":"Package Updates","title":"QC/QA functions for the MoTrPAC community","text":"package frequently updated. Please, check file NEWS.md find changes affecting every version","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"QC/QA functions for the MoTrPAC community","text":"First, download install R RStudio: R RStudio (free version) , open RStudio install devtools package Finally, install MotrpacBicQC package","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"MoTrPAC/MotrpacBicQC\")"},{"path":"https://motrpac.github.io/MotrpacBicQC/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"QC/QA functions for the MoTrPAC community","text":"following vignettes available: Metabolomics Proteomics (untargeted) Proteomics (olink) Clinical Chemistry functions Alternatively, package installed, run following command access documentation: Follow link details available functions","code":"browseVignettes(\"MotrpacBicQC\")"},{"path":"https://motrpac.github.io/MotrpacBicQC/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"QC/QA functions for the MoTrPAC community","text":"Need help? Please, submit issue providing many details possible.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/index.html","id":"credit","dir":"","previous_headings":"","what":"Credit","title":"QC/QA functions for the MoTrPAC community","text":"MoTrPAC Bioinformatics Center","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/notes_developers.html","id":"notes-for-developers","dir":"","previous_headings":"","what":"Notes for developers","title":"NA","text":"Recommended steps using Rstudio (requires set roxygen2 & RStudio) Build documentation (command + shift + D) Run tests (command + shift + T) Check everything (command + shift + E), also run tests load package (command + shift + D) R CMD check report look like :","code":"── R CMD check results ───────────────────────────────── MotrpacBicQC 0.1.0 ──── Duration: 41.6s  0 errors ✓ | 0 warnings ✓ | 0 notes ✓  R CMD check succeeded"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"assay abbreviations — assay_abbr","title":"assay abbreviations — assay_abbr","text":"assay abbreviations","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assay abbreviations — assay_abbr","text":"","code":"assay_abbr"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_abbr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"assay abbreviations — assay_abbr","text":"object class character length 21.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Motrpac assay codes — assay_codes","title":"Motrpac assay codes — assay_codes","text":"Motrpac assay codes","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motrpac assay codes — assay_codes","text":"","code":"assay_codes"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_codes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Motrpac assay codes — assay_codes","text":"data frame assay codes omics_code Main OMIC group submission_code Assay submission code assay_code Assay release code assay_name Assay long name cas_code MoTrPAC chemical analysis site assay_abbreviation Assay abbreviation assay_hex_colour Assay hex colour assay_short_text Abbreviated name specific assay can used graphs tables needed ome_text Omic class measured given assay","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motrpac assay codes — assay_codes","text":"","code":"if (FALSE) { # \\dontrun{  assay_codes } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_order.html","id":null,"dir":"Reference","previous_headings":"","what":"assay order — assay_order","title":"assay order — assay_order","text":"assay order","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assay order — assay_order","text":"","code":"assay_order"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/assay_order.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"assay order — assay_order","text":"object class character length 11.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/bic_animal_tissue_code.html","id":null,"dir":"Reference","previous_headings":"","what":"BIC Tissue Code and Name — bic_animal_tissue_code","title":"BIC Tissue Code and Name — bic_animal_tissue_code","text":"BIC Tissue Code Name","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/bic_animal_tissue_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BIC Tissue Code and Name — bic_animal_tissue_code","text":"","code":"bic_animal_tissue_code"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/bic_animal_tissue_code.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BIC Tissue Code and Name — bic_animal_tissue_code","text":"data frame tissue codes bic_tissue_code T + integer, encoded vial_label DMAQC bic_tissue_name Tissue name (provided DMAQC) motrpac_tissue_code code tissue name tissue_name_release Code + tissue name used releases abbreviation Tissue abbreviation tissue_hex_colour Tissue Hex Colour code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/bic_animal_tissue_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BIC Tissue Code and Name — bic_animal_tissue_code","text":"","code":"if (FALSE) { # \\dontrun{  bic_animal_tissue_code } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_crossfile_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validate assay files (Olink and LAB) — check_crossfile_validation","title":"Cross-validate assay files (Olink and LAB) — check_crossfile_validation","text":"Checks values results file available metadata analyte/protein metadata sample files.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_crossfile_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validate assay files (Olink and LAB) — check_crossfile_validation","text":"","code":"check_crossfile_validation(   r_o,   m_s,   m_p,   assay_type = c(\"olink\", \"lab\"),   return_n_issues = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_crossfile_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validate assay files (Olink and LAB) — check_crossfile_validation","text":"r_o (data.frame) Results data frame. m_s (data.frame) Metadata sample data frame. m_p (data.frame) Metadata analyte/protein data frame. assay_type (character) type assay, either \"olink\" \"lab\". return_n_issues (logical) TRUE, returns number issues. verbose (logical) TRUE (default), displays messages checking process.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_crossfile_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validate assay files (Olink and LAB) — check_crossfile_validation","text":"(int) Number issues identified return_n_issues TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_crossfile_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validate assay files (Olink and LAB) — check_crossfile_validation","text":"","code":"{ if (FALSE) { # \\dontrun{ # For Olink data check_crossfile_validation(r_o = results_olink,                            m_s = metadata_samples_olink,                            m_p = metadata_proteins_olink,                            assay_type = \"olink\")  # For LAB data check_crossfile_validation(r_o = results_lab,                            m_s = metadata_samples_lab,                            m_p = metadata_analyte_lab,                            assay_type = \"lab\") } # } }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_failedsamples.html","id":null,"dir":"Reference","previous_headings":"","what":"check failed samples file for reported missing vial label ids — check_failedsamples","title":"check failed samples file for reported missing vial label ids — check_failedsamples","text":"check failed samples file reported missing vial label ids","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_failedsamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check failed samples file for reported missing vial label ids — check_failedsamples","text":"","code":"check_failedsamples(input_results_folder, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_failedsamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check failed samples file for reported missing vial label ids — check_failedsamples","text":"input_results_folder (char) input path folder verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_failedsamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check failed samples file for reported missing vial label ids — check_failedsamples","text":"(vector) failed reported ids","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_manifest_rawdata.html","id":null,"dir":"Reference","previous_headings":"","what":"check rawfiles between manifest and metabolite_sample matches — check_manifest_rawdata","title":"check rawfiles between manifest and metabolite_sample matches — check_manifest_rawdata","text":"check rawfiles manifest metabolite_sample matches","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_manifest_rawdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check rawfiles between manifest and metabolite_sample matches — check_manifest_rawdata","text":"","code":"check_manifest_rawdata(   input_results_folder,   m_s_n_raw,   return_n_issues = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_manifest_rawdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check rawfiles between manifest and metabolite_sample matches — check_manifest_rawdata","text":"input_results_folder (char) input path folder m_s_n_raw (list) list raw files available metadata sample file return_n_issues (logical) TRUE returns number issues verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_manifest_rawdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check rawfiles between manifest and metabolite_sample matches — check_manifest_rawdata","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_analyte.html","id":null,"dir":"Reference","previous_headings":"","what":"Check analyte metadata file — check_metadata_analyte","title":"Check analyte metadata file — check_metadata_analyte","text":"Checks whether metadata_analyte file follows required guidelines.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_analyte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check analyte metadata file — check_metadata_analyte","text":"","code":"check_metadata_analyte(   df,   return_n_issues = FALSE,   validate_uniprot = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_analyte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check analyte metadata file — check_metadata_analyte","text":"df (data.frame) metadata_analyte data frame check. return_n_issues (logical) TRUE, returns number issues found. validate_uniprot (logical) TRUE, checks Uniprot IDs valid connecting Uniprot database. Note: may take several minutes depending number IDs. verbose (logical) TRUE (default), displays messages checking process.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_analyte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check analyte metadata file — check_metadata_analyte","text":"(int) number issues identified return_n_issues TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_analyte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check analyte metadata file — check_metadata_analyte","text":"","code":"if (FALSE) { # \\dontrun{ check_metadata_analyte(df = metadata_analyte) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_metabolites.html","id":null,"dir":"Reference","previous_headings":"","what":"check metadata metabolites — check_metadata_metabolites","title":"check metadata metabolites — check_metadata_metabolites","text":"check whether metadata_metabolites following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_metabolites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check metadata metabolites — check_metadata_metabolites","text":"","code":"check_metadata_metabolites(   df,   name_id,   return_n_issues = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_metabolites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check metadata metabolites — check_metadata_metabolites","text":"df (data.frame) metadata_metabolites name_id (char) specify whether named unnamed files return_n_issues (logical) TRUE returns number issues. verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_metabolites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check metadata metabolites — check_metadata_metabolites","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_metabolites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check metadata metabolites — check_metadata_metabolites","text":"","code":"{ check_metadata_metabolites(df = metadata_metabolites_named, name_id = \"named\") } #>   + (+) All required columns present #>   + (+) `metabolite_name` OK #>   + (+) `refmet_name` unique values: OK #>   + Validating `refmet_name` (it might take some time) #>       (-) `refmet_name` [`Leucine/Isoleucine`] must be modified to the RefMet Standarized name: \"Leucine\" (Error RN2) #>       (-) `refmet_name` [`Oxoglutaric acid`] must be modified to the RefMet Standarized name: \"2-Oxoglutaric acid\" (Error RN2) #>       (-) `refmet_name` [`Citric acid/Isocitric acid`] must be modified to the RefMet Standarized name: \"Citric acid\" (Error RN2) #>       (-) Total number of missed ids on MW: 3 #>    - (-) SUMMARY: 3 `refmet_name` not found in RefMet Metabolomics Data Dictionary: FAIL #>   + (+) {rt} all numeric: OK #>   + (+) {mz} all numeric: OK #>   + (+) {`neutral_mass`} all numeric values OK #>   + (+) {formula} available: OK"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_phase_file.html","id":null,"dir":"Reference","previous_headings":"","what":"check metadata phase file — check_metadata_phase_file","title":"check metadata phase file — check_metadata_phase_file","text":"check existence metadata phase file","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_phase_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check metadata phase file — check_metadata_phase_file","text":"","code":"check_metadata_phase_file(input_results_folder, verbose)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_phase_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check metadata phase file — check_metadata_phase_file","text":"input_results_folder (char) input path folder verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_phase_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check metadata phase file — check_metadata_phase_file","text":"(logical) TRUE exist, FALSE ","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_proteins.html","id":null,"dir":"Reference","previous_headings":"","what":"Check olink metadata proteins file — check_metadata_proteins","title":"Check olink metadata proteins file — check_metadata_proteins","text":"check whether metadata-proteins.txt file following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_proteins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check olink metadata proteins file — check_metadata_proteins","text":"","code":"check_metadata_proteins(   df,   return_n_issues = FALSE,   validate_uniprot = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_proteins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check olink metadata proteins file — check_metadata_proteins","text":"df (data.frame) metadata_proteins df return_n_issues (logical) TRUE returns number issues. validate_uniprot (logical) TRUE, check uniprot ids valid connecting Uniprot. Note: depending number ids, might take several finish complete validation verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_proteins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check olink metadata proteins file — check_metadata_proteins","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_proteins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check olink metadata proteins file — check_metadata_proteins","text":"","code":"{ if (FALSE) { # \\dontrun{ check_metadata_proteins(df = metadata_proteins) } # } }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"check metadata samples — check_metadata_samples","title":"check metadata samples — check_metadata_samples","text":"check whether metadata_sample following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check metadata samples — check_metadata_samples","text":"","code":"check_metadata_samples(   df,   cas,   assay = \"OTHER\",   return_n_issues = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check metadata samples — check_metadata_samples","text":"df (data.frame) metadata_metabolites cas (char) CAS site code assay (char) Assay code. Options: CONV: Duke's conventional metabolites (default): assays. return_n_issues (logical) TRUE returns number issues. verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check metadata samples — check_metadata_samples","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check metadata samples — check_metadata_samples","text":"","code":"{ check_metadata_samples(df = metadata_sample_named, cas = \"umichigan\") } #>    - (-) `metadata_sample`: recently required COLUMN NAMES are missed: Adding with NA values: FAIL #>   + (+) All required columns present #>   + (+) `sample_id` seems OK #>   + (+) `sample_type` seems OK #>   + (+) `sample_order` is numeric #>   + (+) `sample_order` unique values OK #>   + (+) `raw_file` unique values: OK #>    - (-) `extraction_date` has NA values: FAIL #>    - (-) `acquisition_date` has NA values: FAIL #>    - (-) NA values detected in column ` lc_column_id `: FAIL #>    - ( ) Number of unique values in column ` lc_column_id `:  1"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_lab.html","id":null,"dir":"Reference","previous_headings":"","what":"Check LAB metadata samples file — check_metadata_samples_lab","title":"Check LAB metadata samples file — check_metadata_samples_lab","text":"Checks whether metadata_sample file LAB assays follows required guidelines.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_lab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check LAB metadata samples file — check_metadata_samples_lab","text":"","code":"check_metadata_samples_lab(df, return_n_issues = FALSE, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_lab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check LAB metadata samples file — check_metadata_samples_lab","text":"df (data.frame) LAB metadata samples data return_n_issues (logical) TRUE, returns number issues identified. verbose (logical) TRUE (default), displays messages checking process.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_lab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check LAB metadata samples file — check_metadata_samples_lab","text":"(int) Number issues identified return_n_issues TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_lab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check LAB metadata samples file — check_metadata_samples_lab","text":"","code":"if (FALSE) { # \\dontrun{ check_metadata_samples_lab(df = metadata_sample_named_CK_plasma) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_olink.html","id":null,"dir":"Reference","previous_headings":"","what":"check olink metadata samples file — check_metadata_samples_olink","title":"check olink metadata samples file — check_metadata_samples_olink","text":"check whether metadata_sample following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_olink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check olink metadata samples file — check_metadata_samples_olink","text":"","code":"check_metadata_samples_olink(df, return_n_issues = FALSE, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_olink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check olink metadata samples file — check_metadata_samples_olink","text":"df (data.frame) olink metadata samples ata return_n_issues (logical) TRUE returns number issues. verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_olink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check olink metadata samples file — check_metadata_samples_olink","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_metadata_samples_olink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check olink metadata samples file — check_metadata_samples_olink","text":"","code":"{ if (FALSE) { # \\dontrun{ check_metadata_samples(df = metadata_sample_named) } # } }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_missing_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Missing Values in a Data Frame Column — check_missing_values","title":"Check for Missing Values in a Data Frame Column — check_missing_values","text":"function checks missing values specified column data frame. returns TRUE missing values column, FALSE otherwise.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_missing_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Missing Values in a Data Frame Column — check_missing_values","text":"","code":"check_missing_values(df, column)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_missing_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Missing Values in a Data Frame Column — check_missing_values","text":"df data frame column checked located. column name column check missing values, string.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_missing_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Missing Values in a Data Frame Column — check_missing_values","text":"boolean value; TRUE specified column missing values, FALSE .","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_missing_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for Missing Values in a Data Frame Column — check_missing_values","text":"","code":"data <- data.frame(a = c(1, 2, NA, 4), b = c(\"A\", \"B\", \"C\", \"D\")) check_missing_values(data, \"a\") # returns TRUE #> [1] TRUE check_missing_values(data, \"b\") # returns FALSE #> [1] FALSE"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_ratio_proteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"check proteomics ratio file — check_ratio_proteomics","title":"check proteomics ratio file — check_ratio_proteomics","text":"check whether proteomics ratio results files following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_ratio_proteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check proteomics ratio file — check_ratio_proteomics","text":"","code":"check_ratio_proteomics(   df_ratio,   isPTM,   f_proof = TRUE,   output_prefix = \"ratio-file\",   out_qc_folder = NULL,   printPDF = TRUE,   return_n_issues = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_ratio_proteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check proteomics ratio file — check_ratio_proteomics","text":"df_ratio (data.frame) proteomics ratio results data frame (required) isPTM (logical) TRUE PTM results file f_proof (logical) TRUE (default) print distribution NA plots output_prefix (char) f_proof = TRUE, provide prefix output name out_qc_folder (char) f_proof TRUE, folder path can provided (otherwise print current working directory) printPDF (logical) TRUE (default print plots pdf) return_n_issues (logical) TRUE returns number issues. verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_ratio_proteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check proteomics ratio file — check_ratio_proteomics","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_ratio_proteomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check proteomics ratio file — check_ratio_proteomics","text":"","code":"{ test <- check_ratio_proteomics(df_ratio = metadata_metabolites_named, isPTM =  TRUE, return_n_issues = TRUE, verbose = FALSE) # \"test\" should be NULL }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results.html","id":null,"dir":"Reference","previous_headings":"","what":"check results — check_results","title":"check results — check_results","text":"check whether results file following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check results — check_results","text":"","code":"check_results(r_m, m_s, m_m, return_n_issues = FALSE, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check results — check_results","text":"r_m (data.frame) results df m_s (char) metadata_sample df m_m (char) metadata_metabolites df return_n_issues (logical) TRUE returns number issues verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check results — check_results","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check results — check_results","text":"","code":"{ check_results(r_m = results_named, m_s = metadata_sample_named, m_m = metadata_metabolites_named) } #>   + (+) All samples from `results_metabolite` are available in `metadata_sample` #>   + (+) `metabolite_name` is identical in both [results] and `metadata_metabolites` files: OK #>   + (+) `sample_id` columns are numeric: OK"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results_assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Check results file for assays — check_results_assays","title":"Check results file for assays — check_results_assays","text":"Checks whether results file follows guidelines Olink IMM assays.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results_assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check results file for assays — check_results_assays","text":"","code":"check_results_assays(   df,   assay_type = c(\"olink\", \"lab\"),   return_n_issues = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results_assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check results file for assays — check_results_assays","text":"df (data.frame) results data frame check. assay_type (character) type assay, either \"olink\" \"imm\". return_n_issues (logical) TRUE, returns number issues identified. verbose (logical) TRUE (default), displays messages checking process.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results_assays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check results file for assays — check_results_assays","text":"(int) Number issues identified return_n_issues TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_results_assays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check results file for assays — check_results_assays","text":"","code":"if (FALSE) { # \\dontrun{ check_results_assays(df = results_df, assay_type = \"olink\") check_results_assays(df = results_df, assay_type = \"imm\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_rii_proteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"check proteomics reported ion intensity file — check_rii_proteomics","title":"check proteomics reported ion intensity file — check_rii_proteomics","text":"check whether proteomics rri results files following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_rii_proteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check proteomics reported ion intensity file — check_rii_proteomics","text":"","code":"check_rii_proteomics(   df_rri,   isPTM,   f_proof = TRUE,   output_prefix = \"rii-file\",   out_qc_folder = NULL,   return_n_issues = FALSE,   printPDF = TRUE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_rii_proteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check proteomics reported ion intensity file — check_rii_proteomics","text":"df_rri (data.frame) proteomics rri data frame (required) isPTM (logical) TRUE PTM results file f_proof (logical) TRUE (default) print distribution NA plots output_prefix (char) f_proof = TRUE, provide prefix output name out_qc_folder (char) f_proof TRUE, folder path can provided (otherwise print current working directory) return_n_issues (logical) TRUE returns number issues. printPDF (logical) TRUE (default print plots pdf) verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_rii_proteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check proteomics reported ion intensity file — check_rii_proteomics","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_rii_proteomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check proteomics reported ion intensity file — check_rii_proteomics","text":"","code":"{ test <- check_rii_proteomics(df_rri = metadata_metabolites_named, isPTM =  TRUE, return_n_issues = TRUE, verbose = FALSE) # \"test\" should be NULL }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_vial_metadata_proteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"check proteomics vial metadata file — check_vial_metadata_proteomics","title":"check proteomics vial metadata file — check_vial_metadata_proteomics","text":"check whether proteomics rri results files following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_vial_metadata_proteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check proteomics vial metadata file — check_vial_metadata_proteomics","text":"","code":"check_vial_metadata_proteomics(df_vm, return_n_issues = FALSE, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_vial_metadata_proteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check proteomics vial metadata file — check_vial_metadata_proteomics","text":"df_vm (data.frame) proteomics vial_label data frame (required) return_n_issues (logical) TRUE returns number issues. verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_vial_metadata_proteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check proteomics vial metadata file — check_vial_metadata_proteomics","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_vial_metadata_proteomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check proteomics vial metadata file — check_vial_metadata_proteomics","text":"","code":"{ test <- check_vial_metadata_proteomics(df_vm = metadata_metabolites_named, return_n_issues = TRUE, verbose = FALSE) # \"test\" should be NULL }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_viallabel_dmaqc.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate vial labels from DMAQC — check_viallabel_dmaqc","title":"Validate vial labels from DMAQC — check_viallabel_dmaqc","text":"validate vial label DMAQC","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_viallabel_dmaqc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate vial labels from DMAQC — check_viallabel_dmaqc","text":"","code":"check_viallabel_dmaqc(   vl_submitted,   dmaqc_shipping_info,   tissue_code,   cas,   phase,   failed_samples,   out_qc_folder = NULL,   outfile_missed_viallabels,   return_n_issues = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_viallabel_dmaqc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate vial labels from DMAQC — check_viallabel_dmaqc","text":"vl_submitted (vector) results df dmaqc_shipping_info (data.frame) dmaqc shipping information tissue_code (char) tissue code cas (char) CAS code phase (char) phase code failed_samples (char) metadata_metabolites df out_qc_folder (char) output qc folder (creates folder exist) outfile_missed_viallabels (char) file name missed vial labels return_n_issues (logical) TRUE returns number issues verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/check_viallabel_dmaqc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate vial labels from DMAQC — check_viallabel_dmaqc","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/clean_character_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean character columns — clean_character_columns","title":"Clean character columns — clean_character_columns","text":"Removes leading trailing whitespace character columns data frame using trimws.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/clean_character_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean character columns — clean_character_columns","text":"","code":"clean_character_columns(df)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/clean_character_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean character columns — clean_character_columns","text":"df data frame tibble containing character columns cleaned","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/clean_character_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean character columns — clean_character_columns","text":"data frame structure input, whitespace removed character columns","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/clean_character_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean character columns — clean_character_columns","text":"function uses dplyr::across apply trimws columns type character. original data frame structure preserved, content character columns modified.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/clean_character_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean character columns — clean_character_columns","text":"","code":"df <- data.frame(   name = c(\" John \", \"Jane  \", \"  Bob\"),   age = c(25, 30, 35),   city = c(\"New York \", \" London\", \" Paris \") ) clean_df <- clean_character_columns(df)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/combine_metabolomics_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines all files from a Metabolomics batch — combine_metabolomics_batch","title":"Combines all files from a Metabolomics batch — combine_metabolomics_batch","text":"Combines files untargeted assay submission including metadata_sample, metadata_metabolites, results \"NAMED\" \"UNNAMED\" folders","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/combine_metabolomics_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines all files from a Metabolomics batch — combine_metabolomics_batch","text":"","code":"combine_metabolomics_batch(input_results_folder, cas, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/combine_metabolomics_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines all files from a Metabolomics batch — combine_metabolomics_batch","text":"input_results_folder (char) Path PROCESSED_YYYYMMDD folder cas (char) Chemical Analytical Site code (e.g \"umichigan\") verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/combine_metabolomics_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines all files from a Metabolomics batch — combine_metabolomics_batch","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/combine_metabolomics_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combines all files from a Metabolomics batch — combine_metabolomics_batch","text":"","code":"if (FALSE) { # \\dontrun{ all_datasets <- combine_metabolomics_batch(                         input_results_folder = \"/full/path/to/PROCESSED_YYYYMMDD/\",                         cas = \"umichigan\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/create_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folder — create_folder","title":"Create folder — create_folder","text":"Create directory exist. argument provided, returns current working directory","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/create_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folder — create_folder","text":"","code":"create_folder(folder_name = NULL, verbose = FALSE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/create_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folder — create_folder","text":"folder_name (chr) folder name verbose (logical) TRUE shows messages (default FALSE)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/create_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create folder — create_folder","text":"","code":"{ create_folder(folder_name = NULL) # Or use this one for a real folder: # create_folder(folder_name = \"testing\") } #> [1] \"/Users/davidjm/github/MoTrPAC/MotrpacBicQC/docs/reference\""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/dl_read_gcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Read File from Google Cloud Storage — dl_read_gcp","title":"Download and Read File from Google Cloud Storage — dl_read_gcp","text":"function downloads file Google Cloud Storage (GCS) local directory reads R data frame. uses gsutil command-line tool handle file download.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/dl_read_gcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Read File from Google Cloud Storage — dl_read_gcp","text":"","code":"dl_read_gcp(   path,   sep = \"\\t\",   header = TRUE,   tmpdir,   gsutil_path = \"gsutil\",   check_first = TRUE,   verbose = FALSE,   ... )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/dl_read_gcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Read File from Google Cloud Storage — dl_read_gcp","text":"path Character. path file GCS, e.g., gs://bucket-name/file-name.csv. sep Character. field separator character. Default \\t. header Logical. Whether file contains names variables first line. Default TRUE. tmpdir Character. local directory file downloaded. gsutil_path Character. path gsutil command-line tool. Default \"gsutil\". Now also supporting gcloud command. full path gsutil check_first Logical. Whether check file already exists locally downloading. Default TRUE. verbose Logical. TRUE, prints messages download process. Default FALSE. ... Additional arguments passed readr::read_delim.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/dl_read_gcp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Read File from Google Cloud Storage — dl_read_gcp","text":"data frame containing contents downloaded file.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/dl_read_gcp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Read File from Google Cloud Storage — dl_read_gcp","text":"function first checks specified file exists GCS. file exists, downloads file specified local directory (tmpdir). local directory exist, created. function handles spaces directory paths quoting appropriately. file successfully downloaded, read R using readr::read_delim. check_first argument set TRUE, function first check file already exists locally avoid redundant downloads. file already present locally, downloaded .","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/dl_read_gcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Read File from Google Cloud Storage — dl_read_gcp","text":"","code":"if (FALSE) { # \\dontrun{ df <- dl_read_gcp(   path = \"gs://bucket-name/file-name.csv\",   sep = \",\",   header = TRUE,   tmpdir = \"/local/path\",   gsutil_path = \"gsutil\",   check_first = TRUE,   verbose = TRUE ) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/filter_required_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"filter required columns only — filter_required_columns","title":"filter required columns only — filter_required_columns","text":"returns data frame required columns metabolomics proteomics","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/filter_required_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter required columns only — filter_required_columns","text":"","code":"filter_required_columns(   df,   type = c(\"m_m\", \"m_s\", \"v_m\", \"olproteins\", \"olsamples\", \"labanalytes\", \"labsamples\"),   name_id = NULL,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/filter_required_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter required columns only — filter_required_columns","text":"df (data.frame) metadata_metabolites type (char) Type file filter columns: m_m: metadata metabolites m_s: metadata samples v_m: proteomics vial_metadata olproteins: olink metadata proteins olsamples: olink metadata samples name_id (char) specify whether named unnamed files verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/filter_required_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter required columns only — filter_required_columns","text":"(data.frame) filtered data frame required columns","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/filter_required_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filter required columns only — filter_required_columns","text":"","code":"{ df_filtered <- filter_required_columns(df = metadata_metabolites_named, name_id = \"named\") } #>   + (+) All required columns present"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/generate_phase_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the phase detail for submissions — generate_phase_details","title":"Generate the phase detail for submissions — generate_phase_details","text":"phase details simple creating lower case version phase. However, case PASS1A/1C new version generated: pass1ac-06 function detects whether two phases, , generate expected version: either pass1ac-06 pass1ac-18","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/generate_phase_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the phase detail for submissions — generate_phase_details","text":"","code":"generate_phase_details(phase_metadata, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/generate_phase_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the phase detail for submissions — generate_phase_details","text":"phase_metadata (char) expected output set_phase verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/generate_phase_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the phase detail for submissions — generate_phase_details","text":"(char) expected phase_details function","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_and_validate_mdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Validate the Entire RefMet Database from Metabolomics Workbench — get_and_validate_mdd","title":"Get and Validate the Entire RefMet Database from Metabolomics Workbench — get_and_validate_mdd","text":"function fetches validates Metabolomics Data Dictionary Metabolomics Workbench. provides options remove duplicates.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_and_validate_mdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Validate the Entire RefMet Database from Metabolomics Workbench — get_and_validate_mdd","text":"","code":"get_and_validate_mdd(remove_duplications = FALSE, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_and_validate_mdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Validate the Entire RefMet Database from Metabolomics Workbench — get_and_validate_mdd","text":"remove_duplications Logical; TRUE, removes duplicate entries based refmet_name column. verbose Logical; TRUE (default), displays progress messages warnings function execution.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_and_validate_mdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Validate the Entire RefMet Database from Metabolomics Workbench — get_and_validate_mdd","text":"Returns data frame following columns: refmet_name Character; name standarized refmet name pubchem_cid Character; PubChem compound ID. lm_id Character; LIPID MAPS ID. inchi_key Character; International Chemical Identifier Key. exactmass Numeric; exact mass metabolite. formula Character; chemical formula metabolite. super_class Character; superclass category metabolite. main_class Character; main class category metabolite. sub_class Character; subclass category metabolite. hmdb_id Character; Human Metabolome Database ID. kegg_id Character; Kyoto Encyclopedia Genes Genomes ID. row data frame represents unique metabolite entry Metabolomics Workbench Data Dictionary.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_and_validate_mdd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and Validate the Entire RefMet Database from Metabolomics Workbench — get_and_validate_mdd","text":"function downloads entire RefMet database Metabolomics Workbench using REST API. data initially fetched JSON format converted data frame. function checks presence 'name' column data frame, renaming 'refmet_name' consistency. also provides option remove duplicate entries based 'refmet_name' column. duplicates found remove_duplications FALSE, function list duplicated IDs remove . can helpful reviewing data quality consistency.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_and_validate_mdd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Validate the Entire RefMet Database from Metabolomics Workbench — get_and_validate_mdd","text":"","code":"if (FALSE) { # \\dontrun{   refmet <- get_and_validate_mdd(remove_duplications = TRUE, verbose = TRUE)   head(refmet) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_full_path2batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get full path to the batch folder — get_full_path2batch","title":"Get full path to the batch folder — get_full_path2batch","text":"Get full path batch folder","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_full_path2batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get full path to the batch folder — get_full_path2batch","text":"","code":"get_full_path2batch(input_results_folder)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_full_path2batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get full path to the batch folder — get_full_path2batch","text":"input_results_folder (char) path PROCESSED/RESULTS folder check","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/get_full_path2batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get full path to the batch folder — get_full_path2batch","text":"(char) Full path BATCH#_YYYYMMDD folder","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/group_abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"group abbreviations — group_abbr","title":"group abbreviations — group_abbr","text":"group abbreviations","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/group_abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"group abbreviations — group_abbr","text":"","code":"group_abbr"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/group_abbr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"group abbreviations — group_abbr","text":"object class character length 7.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/group_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"group colors — group_cols","title":"group colors — group_cols","text":"group colors","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/group_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"group colors — group_cols","text":"","code":"group_cols"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/group_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"group colors — group_cols","text":"object class character length 12.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_lab_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Process LAB Batch Data — load_lab_batch","title":"Load and Process LAB Batch Data — load_lab_batch","text":"function loads LAB batch data specified input directory. performs quality checks data loads specific files related LAB data, including metadata analytes samples, results file. also integrates validation checks warns many issues identified data.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_lab_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Process LAB Batch Data — load_lab_batch","text":"","code":"load_lab_batch(input_results_folder, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_lab_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Process LAB Batch Data — load_lab_batch","text":"input_results_folder string representing path folder containing LAB batch data loaded processed. verbose Logical; TRUE, prints detailed messages loading process.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_lab_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Process LAB Batch Data — load_lab_batch","text":"list containing data frames metadata analytes (m_a), metadata samples (m_s), LAB results (r_o). certain files available, corresponding entries list NULL.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_lab_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and Process LAB Batch Data — load_lab_batch","text":"","code":"if (FALSE) { # \\dontrun{ list_of_df <- load_lab_batch(input_results_folder = \"/path/to/PROCESSED_YYYYMMDD/\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_metabolomics_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Load metabolomics batch — load_metabolomics_batch","title":"Load metabolomics batch — load_metabolomics_batch","text":"Open, check, return metabolomics files","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_metabolomics_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load metabolomics batch — load_metabolomics_batch","text":"","code":"load_metabolomics_batch(input_results_folder, cas, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_metabolomics_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load metabolomics batch — load_metabolomics_batch","text":"input_results_folder (char) Path PROCESSED_YYYYMMDD folder cas (char) Chemical Analytical Site code (e.g \"umichigan\") verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_metabolomics_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load metabolomics batch — load_metabolomics_batch","text":"(list data.frames) List data frames","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_metabolomics_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load metabolomics batch — load_metabolomics_batch","text":"","code":"if (FALSE) { # \\dontrun{ here <- load_metabolomics_batch(input_results_folder = \"/path/to/PROCESSED_YYYYMMDD/\",                                  cas = \"cassite\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_olink_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and Process Olink Batch Data — load_olink_batch","title":"Load and Process Olink Batch Data — load_olink_batch","text":"function loads Olink batch data specified input directory. performs quality checks data loads specific files related Olink data, including metadata proteins samples, results file. also integrates validation checks warns many issues identified data.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_olink_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and Process Olink Batch Data — load_olink_batch","text":"","code":"load_olink_batch(input_results_folder, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_olink_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and Process Olink Batch Data — load_olink_batch","text":"input_results_folder string representing path folder containing Olink batch data loaded processed. verbose Logical; TRUE, prints detailed messages loading process.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_olink_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and Process Olink Batch Data — load_olink_batch","text":"list containing data frames metadata proteins (m_p), metadata samples (m_s), Olink results (r_o). certain files available, corresponding entries list NULL.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_olink_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and Process Olink Batch Data — load_olink_batch","text":"","code":"if (FALSE) { # \\dontrun{ list_of_df <- load_olink_batch(input_results_folder = \"/path/to/PROCESSED_YYYYMMDD/\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_proteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Proteomics batch — load_proteomics","title":"Load Proteomics batch — load_proteomics","text":"Load proteomics batch","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_proteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Proteomics batch — load_proteomics","text":"","code":"load_proteomics(input_results_folder, isPTM, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_proteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Proteomics batch — load_proteomics","text":"input_results_folder (char) path PROCESSED folder check isPTM (logical) TRUE Post-Translational-Modification proteomics assay verbose (logical) TRUE (default) prints QC details.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/load_proteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Proteomics batch — load_proteomics","text":"(List) data frames: rii,","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_all_metabolomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge all metabolomics files — merge_all_metabolomics","title":"Merge all metabolomics files — merge_all_metabolomics","text":"Merge metabolomics datasets, including \"results\" \"metadata\" files, targeted untargeted datasets","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_all_metabolomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge all metabolomics files — merge_all_metabolomics","text":"","code":"merge_all_metabolomics(m_m_n, m_m_u = NULL, m_s_n, r_m_n, r_m_u = NULL, phase)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_all_metabolomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge all metabolomics files — merge_all_metabolomics","text":"m_m_n (metabolomics metadata named) m_m_u (metabolomics metadata unnamed) m_s_n (metabolomics sample named) r_m_n (results named) r_m_u (results unnamed) phase (MoTrPAC Animal phase. Eg. PASS1A-06)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_all_metabolomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge all metabolomics files — merge_all_metabolomics","text":"(data.frame) Merged data frame long format","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_all_metabolomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge all metabolomics files — merge_all_metabolomics","text":"","code":"plasma.untargeted.merged <- merge_all_metabolomics(        m_m_n = metadata_metabolites_named,        m_m_u = metadata_metabolites_unnamed,        m_s_n = metadata_sample_named,        r_m_n = results_named,        r_m_u = results_unnamed,        phase = \"PASS1A-06\")"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_metabolomics_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge metabolomics metadata named and unnamed — merge_metabolomics_metadata","title":"Merge metabolomics metadata named and unnamed — merge_metabolomics_metadata","text":"Merge metabolomics metadata","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_metabolomics_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge metabolomics metadata named and unnamed — merge_metabolomics_metadata","text":"","code":"merge_metabolomics_metadata(m_m_n, m_m_u)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_metabolomics_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge metabolomics metadata named and unnamed — merge_metabolomics_metadata","text":"m_m_n (df) metabolomics metadata named m_m_u (char) metabolomics metadata unnamed","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_metabolomics_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge metabolomics metadata named and unnamed — merge_metabolomics_metadata","text":"(data.frame) merged metadata metabolites","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_metabolomics_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge metabolomics metadata named and unnamed — merge_metabolomics_metadata","text":"","code":"{ m_m <- merge_metabolomics_metadata(m_m_n = metadata_metabolites_named,                                    m_m_u = metadata_metabolites_unnamed) }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_phenotype_metabolomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge phenotypic and metabolics results — merge_phenotype_metabolomics","title":"Merge phenotypic and metabolics results — merge_phenotype_metabolomics","text":"Merge phenotypic data (phenotypes_pass1a06_short) metabolomics merged results metadata","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_phenotype_metabolomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge phenotypic and metabolics results — merge_phenotype_metabolomics","text":"","code":"merge_phenotype_metabolomics(df_long)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_phenotype_metabolomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge phenotypic and metabolics results — merge_phenotype_metabolomics","text":"df_long (data.frame) Long format metabolomics merged results","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/merge_phenotype_metabolomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge phenotypic and metabolics results — merge_phenotype_metabolomics","text":"(data.frame) Merged file, including following columns: sample_id Sample Id, including vial_label site specific QC ids sample_type Metabolomics sample types. Check metabolomics data transfer guidelines sample_order Order injection Mass Spec metabolite_name Given name every lab refmet_name Map metabolite name Metabolomics RefMet database mz mass charge rt retention time formula chemical formula neutral_mass neutral mass id type metabolite identification: \"named\", \"unnamed\" metabolite Merge \"refmet\" \"named\" metabolites \"metabolite_name\" \"unnamed\" metabolites quantification Untargeted: Peak area, Targeted: absolute concentration (check \"experimentalDetails\" unit) tissue_code MoTrPAC tissue code tissue_name Tissue name group_time_point Intervention group (Exercise / Control) +  time point sex Animal Sex site_code Chemical Analysis Site (CAS) short abbreviation group Intervention group: Exercise / Control condition Sex + group + time-point bioreplicate Sex + group + time-point + sample_order","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metabolomics_data_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolomics data dictionary — metabolomics_data_dictionary","title":"Metabolomics data dictionary — metabolomics_data_dictionary","text":"Metabolomics data dictionary","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metabolomics_data_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolomics data dictionary — metabolomics_data_dictionary","text":"","code":"metabolomics_data_dictionary"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metabolomics_data_dictionary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metabolomics data dictionary — metabolomics_data_dictionary","text":"data frame > 2000 rows 15 columns (variables): CURRENT_REFMET_NAME Updated version RefMet (December 2020) refmet_name Old version refmet_name metabolite_name Metabolite name provided laboratory is_standard reference standard? 1: yes, 0: super_class Metabolite super class main_class Metabolite main class sub_class Metabolite sub class formula Metabolite formula exactmass Metaboliteexact mass pubchem_cid Metabolite pubchem id kegg_id Metabolite kegg id inchi_key Metabolite inchi key lm_id Metabolite lm id hmdb_id Metabolite hmdb id chebi_id Metabolite chebi id","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metabolomics_data_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metabolomics data dictionary — metabolomics_data_dictionary","text":"","code":"if (FALSE) { # \\dontrun{  metabolomics_data_dictionary } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata Metabolites test dataset for NAMED metabolites — metadata_metabolites_named","title":"Metadata Metabolites test dataset for NAMED metabolites — metadata_metabolites_named","text":"Metadata Metabolites test dataset NAMED metabolites","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata Metabolites test dataset for NAMED metabolites — metadata_metabolites_named","text":"","code":"metadata_metabolites_named"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_named.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata Metabolites test dataset for NAMED metabolites — metadata_metabolites_named","text":"data frame 53 rows 6 columns: metabolite_name metabolite names refmet_name RefMet id (metabolomics workbench) mz mass charge rt retention time formula chemical formula neutral_mass neutral mass","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_named.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata Metabolites test dataset for NAMED metabolites — metadata_metabolites_named","text":"","code":"if (FALSE) { # \\dontrun{  data(metadata_metabolites_named) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_unnamed.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata Metabolites test dataset for UNNAMED metabolites — metadata_metabolites_unnamed","title":"Metadata Metabolites test dataset for UNNAMED metabolites — metadata_metabolites_unnamed","text":"Metadata Metabolites test dataset UNNAMED metabolites","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_unnamed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata Metabolites test dataset for UNNAMED metabolites — metadata_metabolites_unnamed","text":"","code":"metadata_metabolites_unnamed"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_unnamed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata Metabolites test dataset for UNNAMED metabolites — metadata_metabolites_unnamed","text":"data frame 53 rows 4 columns: metabolite_name metabolite names based mz_rt mz mass charge rt retention time neutral_mass neutral mass","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_metabolites_unnamed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata Metabolites test dataset for UNNAMED metabolites — metadata_metabolites_unnamed","text":"","code":"if (FALSE) { # \\dontrun{  data(metadata_metabolites_unnamed) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata Sample test dataset for NAMED metabolites — metadata_sample_named","title":"Metadata Sample test dataset for NAMED metabolites — metadata_sample_named","text":"Metadata Sample test dataset NAMED metabolites","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata Sample test dataset for NAMED metabolites — metadata_sample_named","text":"","code":"metadata_sample_named"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_named.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata Sample test dataset for NAMED metabolites — metadata_sample_named","text":"data frame 97 rows 4 columns: sample_id metabolite names based mz_rt sample_type mass charge sample_order retention time raw_file neutral mass","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_named.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata Sample test dataset for NAMED metabolites — metadata_sample_named","text":"","code":"if (FALSE) { # \\dontrun{  data(metadata_sample_named) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_unnamed.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata Sample test dataset for UNNAMED metabolites — metadata_sample_unnamed","title":"Metadata Sample test dataset for UNNAMED metabolites — metadata_sample_unnamed","text":"Metadata Sample test dataset UNNAMED metabolites","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_unnamed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata Sample test dataset for UNNAMED metabolites — metadata_sample_unnamed","text":"","code":"metadata_sample_unnamed"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_unnamed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata Sample test dataset for UNNAMED metabolites — metadata_sample_unnamed","text":"data frame 97 rows 4 columns: sample_id metabolite names based mz_rt sample_type mass charge sample_order retention time raw_file neutral mass","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/metadata_sample_unnamed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata Sample test dataset for UNNAMED metabolites — metadata_sample_unnamed","text":"","code":"if (FALSE) { # \\dontrun{  metadata_sample_unnamed } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/open_file.html","id":null,"dir":"Reference","previous_headings":"","what":"open files — open_file","title":"open files — open_file","text":"open files check right","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/open_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"open files — open_file","text":"","code":"open_file(input_results_folder, filepattern, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/open_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"open files — open_file","text":"input_results_folder (char) input path folder filepattern (char) regular expression find file file system provided verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/open_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"open files — open_file","text":"(list) list data frame flag status","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/phenotypes_pass1a06_short.html","id":null,"dir":"Reference","previous_headings":"","what":"Motrpac Phenotypes PASS1A 6 Months — phenotypes_pass1a06_short","title":"Motrpac Phenotypes PASS1A 6 Months — phenotypes_pass1a06_short","text":"Motrpac Phenotypes PASS1A 6 Months","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/phenotypes_pass1a06_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motrpac Phenotypes PASS1A 6 Months — phenotypes_pass1a06_short","text":"","code":"phenotypes_pass1a06_short"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/phenotypes_pass1a06_short.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Motrpac Phenotypes PASS1A 6 Months — phenotypes_pass1a06_short","text":"data frame 8616 rows 6 columns: tissue_code MoTrPAC Tissue code vial_label Vial label id (available MoTrPAC Samples) tissue_name Tissue name group_time_point Group time point sex Animal sex site_code cas","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/phenotypes_pass1a06_short.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motrpac Phenotypes PASS1A 6 Months — phenotypes_pass1a06_short","text":"","code":"if (FALSE) { # \\dontrun{  phenotypes_pass1a06_short } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_lab_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Basic LAB QC Plots — plot_basic_lab_qc","title":"Generate Basic LAB QC Plots — plot_basic_lab_qc","text":"function creates set four QC plots LAB assay. plots include: overall value distribution histogram density overlay missing value percentage. boxplot comparing value distributions across sample types. scatter plot loess smooth showing trend values injection sample order. bar plot summarizing percentage missing data sample type.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_lab_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Basic LAB QC Plots — plot_basic_lab_qc","text":"","code":"plot_basic_lab_qc(   results,   results_long,   out_qc_folder = NULL,   output_prefix,   printPDF = TRUE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_lab_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Basic LAB QC Plots — plot_basic_lab_qc","text":"results data frame containing assay results. Expected one row per analyte, columns analyte_name metadata. results_long long-format data frame containing sample-level data. Expected columns include: sample_id, sample_type, value, sample_order, sample_id_ordered. out_qc_folder Character. folder QC plot PDFs saved. NULL, function create default folder. output_prefix Character. prefix used names output PDF files. printPDF Logical. TRUE, function outputs plots PDF files. verbose Logical. TRUE, function prints progress messages console.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_lab_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Basic LAB QC Plots — plot_basic_lab_qc","text":"Invisibly returns gridExtra::grid.arrange object containing arranged plots. primary output saved PDF file(s) printPDF = TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_lab_qc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Basic LAB QC Plots — plot_basic_lab_qc","text":"function uses ggplot2 syntax generate clean informative plots, avoiding clutter even large numbers samples (e.g., > 1400 samples). calculates overall missing value percentage measured values, provides visual summaries data distribution missing data prevalence.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_metabolomics_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Basic Metabolomics QC charts — plot_basic_metabolomics_qc","title":"Plot Basic Metabolomics QC charts — plot_basic_metabolomics_qc","text":"Plot intensity distributions, number unique ids, NA values RT/MZ density maps (untargeted)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_metabolomics_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Basic Metabolomics QC charts — plot_basic_metabolomics_qc","text":"","code":"plot_basic_metabolomics_qc(   results,   results_long,   metametab = NULL,   out_qc_folder = NULL,   output_prefix,   printPDF = TRUE,   untargeted = TRUE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_metabolomics_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Basic Metabolomics QC charts — plot_basic_metabolomics_qc","text":"results (df) metabolomics results (named unnamed already merged, untargeted) results_long (df) metabolomics results (named unnamed already merged, untargeted, long format) metametab (df) metadata samples metadata (untargeted sites) out_qc_folder (char) output qc folder (creates folder exist) output_prefix (char) prefix file name output (pdf file) printPDF (logical) TRUE (default) prints pdf file untargeted (logical) TRUE dataset untargeted (named + unnamed metabolites) verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_olink_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Basic OLINK QC charts — plot_basic_olink_qc","title":"Plot Basic OLINK QC charts — plot_basic_olink_qc","text":"Plot value distributions, number unique ids, NA values","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_olink_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Basic OLINK QC charts — plot_basic_olink_qc","text":"","code":"plot_basic_olink_qc(   results,   results_long,   out_qc_folder = NULL,   output_prefix,   printPDF = TRUE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/plot_basic_olink_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Basic OLINK QC charts — plot_basic_olink_qc","text":"results (df) olink results merged proteins metadata results_long (df) olink results long format merged sample metadata out_qc_folder (char) output qc folder (creates folder exist) output_prefix (char) prefix file name output (pdf file) printPDF (logical) TRUE (default) prints pdf file verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/proteomics_plots_rii.html","id":null,"dir":"Reference","previous_headings":"","what":"QC Plot of proteomics reporter ion intensity data — proteomics_plots_rii","title":"QC Plot of proteomics reporter ion intensity data — proteomics_plots_rii","text":"check whether results file following guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/proteomics_plots_rii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QC Plot of proteomics reporter ion intensity data — proteomics_plots_rii","text":"","code":"proteomics_plots_rii(   all_vial_labels,   all_samples,   peprii,   isPTM,   v_m,   out_qc_folder = NULL,   output_prefix,   printPDF,   verbose )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/proteomics_plots_rii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QC Plot of proteomics reporter ion intensity data — proteomics_plots_rii","text":"all_vial_labels (vector) vial_labels all_samples (vector) sample ids peprii (char) Reporter Ion Intensity df isPTM (logical) PTM assay v_m (df) sample metadata out_qc_folder (char) f_proof TRUE, folder path can provided (otherwise print current working directory) output_prefix (char) provide prefix output name printPDF (logical) TRUE (default print plots pdf) verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/proteomics_plots_rii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QC Plot of proteomics reporter ion intensity data — proteomics_plots_rii","text":"(int) number issues identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/proteomics_plots_rii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"QC Plot of proteomics reporter ion intensity data — proteomics_plots_rii","text":"","code":"{ check_results(r_m = results_named, m_s = metadata_sample_named, m_m = metadata_metabolites_named) } #>   + (+) All samples from `results_metabolite` are available in `metadata_sample` #>   + (+) `metabolite_name` is identical in both [results] and `metadata_metabolites` files: OK #>   + (+) `sample_id` columns are numeric: OK"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"remove empty columns — remove_empty_columns","title":"remove empty columns — remove_empty_columns","text":"remove empty columns","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove empty columns — remove_empty_columns","text":"","code":"remove_empty_columns(df, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove empty columns — remove_empty_columns","text":"df (char) data frame verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove empty columns — remove_empty_columns","text":"(df) df without empty columns","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"remove empty rows in data frame — remove_empty_rows","title":"remove empty rows in data frame — remove_empty_rows","text":"remove empty rows data frame","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove empty rows in data frame — remove_empty_rows","text":"","code":"remove_empty_rows(df, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove empty rows in data frame — remove_empty_rows","text":"df (char) data frame verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/remove_empty_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove empty rows in data frame — remove_empty_rows","text":"(df) df without empty columns","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Results test dataset for NAMED metabolites — results_named","title":"Results test dataset for NAMED metabolites — results_named","text":"Results test dataset NAMED metabolites","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results test dataset for NAMED metabolites — results_named","text":"","code":"results_named"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_named.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results test dataset for NAMED metabolites — results_named","text":"data frame 58 rows 98 columns: metabolite_name metabolite names 90001013104 Sample id. Unit: Peak Area 90005013104 sample id. Unit: Peak Area 90007013104 sample id. Unit: Peak Area 90008013104 sample id. Unit: Peak Area 90009013104 sample id. Unit: Peak Area 90010013104 sample id. Unit: Peak Area 90011013104 sample id. Unit: Peak Area 90012013104 sample id. Unit: Peak Area 90013013104 sample id. Unit: Peak Area 90014013104 sample id. Unit: Peak Area 90015013104 sample id. Unit: Peak Area 90017013104 sample id. Unit: Peak Area 90018013104 sample id. Unit: Peak Area 90020013104 sample id. Unit: Peak Area 90023013104 sample id. Unit: Peak Area 90025013104 sample id. Unit: Peak Area 90026013104 sample id. Unit: Peak Area 90027013104 sample id. Unit: Peak Area 90028013104 sample id. Unit: Peak Area 90029013104 sample id. Unit: Peak Area 90031013104 sample id. Unit: Peak Area 90032013104 sample id. Unit: Peak Area 90033013104 sample id. Unit: Peak Area 90034013104 sample id. Unit: Peak Area 90037013104 sample id. Unit: Peak Area 90038013104 sample id. Unit: Peak Area 90039013104 sample id. Unit: Peak Area 90040013104 sample id. Unit: Peak Area 90042013104 sample id. Unit: Peak Area 90043013104 sample id. Unit: Peak Area 90044013104 sample id. Unit: Peak Area 90045013104 sample id. Unit: Peak Area 90046013104 sample id. Unit: Peak Area 90047013104 sample id. Unit: Peak Area 90048013104 sample id. Unit: Peak Area 90050013104 sample id. Unit: Peak Area 90052013104 sample id. Unit: Peak Area 90053013104 sample id. Unit: Peak Area 90109013104 sample id. Unit: Peak Area 90110013104 sample id. Unit: Peak Area 90112013104 sample id. Unit: Peak Area 90114013104 sample id. Unit: Peak Area 90115013104 sample id. Unit: Peak Area 90117013104 sample id. Unit: Peak Area 90118013104 sample id. Unit: Peak Area 90119013104 sample id. Unit: Peak Area 90120013104 sample id. Unit: Peak Area 90121013104 sample id. Unit: Peak Area 90122013104 sample id. Unit: Peak Area 90123013104 sample id. Unit: Peak Area 90124013104 sample id. Unit: Peak Area 90126013104 sample id. Unit: Peak Area 90127013104 sample id. Unit: Peak Area 90128013104 sample id. Unit: Peak Area 90129013104 sample id. Unit: Peak Area 90133013104 sample id. Unit: Peak Area 90134013104 sample id. Unit: Peak Area 90135013104 sample id. Unit: Peak Area 90136013104 sample id. Unit: Peak Area 90138013104 sample id. Unit: Peak Area 90139013104 sample id. Unit: Peak Area 90140013104 sample id. Unit: Peak Area 90141013104 sample id. Unit: Peak Area 90142013104 sample id. Unit: Peak Area 90143013104 sample id. Unit: Peak Area 90144013104 sample id. Unit: Peak Area 90145013104 sample id. Unit: Peak Area 90146013104 sample id. Unit: Peak Area 90147013104 sample id. Unit: Peak Area 90148013104 sample id. Unit: Peak Area 90150013104 sample id. Unit: Peak Area 90152013104 sample id. Unit: Peak Area 90155013104 sample id. Unit: Peak Area 90156013104 sample id. Unit: Peak Area 90157013104 sample id. Unit: Peak Area 90159013104 sample id. Unit: Peak Area 90160013104 sample id. Unit: Peak Area CS00000MP-10 sample id. Unit: Peak Area CS00000MP-11 sample id. Unit: Peak Area CS00000MP-12 sample id. Unit: Peak Area CS00000MP-2 sample id. Unit: Peak Area CS00000MP-3 sample id. Unit: Peak Area CS00000MP-4 sample id. Unit: Peak Area CS00000MP-5 sample id. Unit: Peak Area CS00000MP-6 sample id. Unit: Peak Area CS00000MP-7 sample id. Unit: Peak Area CS00000MP-8 sample id. Unit: Peak Area CS00000MP-9 sample id. Unit: Peak Area CS000QCMP-1 sample id. Unit: Peak Area CS000QCMP-2 sample id. Unit: Peak Area CS000QCMP-4 sample id. Unit: Peak Area CS000QCMP-5 sample id. Unit: Peak Area CS000QCMP-6 sample id. Unit: Peak Area CSMR80014-1 sample id. Unit: Peak Area CSMR80014-2 sample id. Unit: Peak Area CSMR80015-1 sample id. Unit: Peak Area CSMR80015-2 sample id. Unit: Peak Area","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_named.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Results test dataset for NAMED metabolites — results_named","text":"","code":"if (FALSE) { # \\dontrun{  results_named } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_unnamed.html","id":null,"dir":"Reference","previous_headings":"","what":"Results test dataset for UNNAMED metabolites — results_unnamed","title":"Results test dataset for UNNAMED metabolites — results_unnamed","text":"Results test dataset UNNAMED metabolites","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_unnamed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results test dataset for UNNAMED metabolites — results_unnamed","text":"","code":"results_unnamed"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_unnamed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results test dataset for UNNAMED metabolites — results_unnamed","text":"data frame 58 rows 98 columns: metabolite_name metabolite names based mz_rt 90001013104 Sample id. Unit: Peak Area 90005013104 Sample id. Unit: Peak Area 90007013104 Sample id. Unit: Peak Area 90008013104 Sample id. Unit: Peak Area 90009013104 Sample id. Unit: Peak Area 90010013104 Sample id. Unit: Peak Area 90011013104 Sample id. Unit: Peak Area 90012013104 Sample id. Unit: Peak Area 90013013104 Sample id. Unit: Peak Area 90014013104 Sample id. Unit: Peak Area 90015013104 Sample id. Unit: Peak Area 90017013104 Sample id. Unit: Peak Area 90018013104 Sample id. Unit: Peak Area 90020013104 Sample id. Unit: Peak Area 90023013104 Sample id. Unit: Peak Area 90025013104 Sample id. Unit: Peak Area 90026013104 Sample id. Unit: Peak Area 90027013104 Sample id. Unit: Peak Area 90028013104 Sample id. Unit: Peak Area 90029013104 Sample id. Unit: Peak Area 90031013104 Sample id. Unit: Peak Area 90032013104 Sample id. Unit: Peak Area 90033013104 Sample id. Unit: Peak Area 90034013104 Sample id. Unit: Peak Area 90037013104 Sample id. Unit: Peak Area 90038013104 Sample id. Unit: Peak Area 90039013104 Sample id. Unit: Peak Area 90040013104 Sample id. Unit: Peak Area 90042013104 Sample id. Unit: Peak Area 90043013104 Sample id. Unit: Peak Area 90044013104 Sample id. Unit: Peak Area 90045013104 Sample id. Unit: Peak Area 90046013104 Sample id. Unit: Peak Area 90047013104 Sample id. Unit: Peak Area 90048013104 Sample id. Unit: Peak Area 90050013104 Sample id. Unit: Peak Area 90052013104 Sample id. Unit: Peak Area 90053013104 Sample id. Unit: Peak Area 90109013104 Sample id. Unit: Peak Area 90110013104 Sample id. Unit: Peak Area 90112013104 Sample id. Unit: Peak Area 90114013104 Sample id. Unit: Peak Area 90115013104 Sample id. Unit: Peak Area 90117013104 Sample id. Unit: Peak Area 90118013104 Sample id. Unit: Peak Area 90119013104 Sample id. Unit: Peak Area 90120013104 Sample id. Unit: Peak Area 90121013104 Sample id. Unit: Peak Area 90122013104 Sample id. Unit: Peak Area 90123013104 Sample id. Unit: Peak Area 90124013104 Sample id. Unit: Peak Area 90126013104 Sample id. Unit: Peak Area 90127013104 Sample id. Unit: Peak Area 90128013104 Sample id. Unit: Peak Area 90129013104 Sample id. Unit: Peak Area 90133013104 Sample id. Unit: Peak Area 90134013104 Sample id. Unit: Peak Area 90135013104 Sample id. Unit: Peak Area 90136013104 Sample id. Unit: Peak Area 90138013104 Sample id. Unit: Peak Area 90139013104 Sample id. Unit: Peak Area 90140013104 Sample id. Unit: Peak Area 90141013104 Sample id. Unit: Peak Area 90142013104 Sample id. Unit: Peak Area 90143013104 Sample id. Unit: Peak Area 90144013104 Sample id. Unit: Peak Area 90145013104 Sample id. Unit: Peak Area 90146013104 Sample id. Unit: Peak Area 90147013104 Sample id. Unit: Peak Area 90148013104 Sample id. Unit: Peak Area 90150013104 Sample id. Unit: Peak Area 90152013104 Sample id. Unit: Peak Area 90155013104 Sample id. Unit: Peak Area 90156013104 Sample id. Unit: Peak Area 90157013104 Sample id. Unit: Peak Area 90159013104 Sample id. Unit: Peak Area 90160013104 Sample id. Unit: Peak Area CS00000MP-10 Sample id. Unit: Peak Area CS00000MP-11 Sample id. Unit: Peak Area CS00000MP-12 Sample id. Unit: Peak Area CS00000MP-2 Sample id. Unit: Peak Area CS00000MP-3 Sample id. Unit: Peak Area CS00000MP-4 Sample id. Unit: Peak Area CS00000MP-5 Sample id. Unit: Peak Area CS00000MP-6 Sample id. Unit: Peak Area CS00000MP-7 Sample id. Unit: Peak Area CS00000MP-8 Sample id. Unit: Peak Area CS00000MP-9 Sample id. Unit: Peak Area CS000QCMP-1 Sample id. Unit: Peak Area CS000QCMP-2 Sample id. Unit: Peak Area CS000QCMP-4 Sample id. Unit: Peak Area CS000QCMP-5 Sample id. Unit: Peak Area CS000QCMP-6 Sample id. Unit: Peak Area CSMR80014-1 Sample id. Unit: Peak Area CSMR80014-2 Sample id. Unit: Peak Area CSMR80015-1 Sample id. Unit: Peak Area CSMR80015-2 Sample id. Unit: Peak Area","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/results_unnamed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Results test dataset for UNNAMED metabolites — results_unnamed","text":"","code":"if (FALSE) { # \\dontrun{  results_unnamed } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/set_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the phase to be validated. — set_phase","title":"Set the phase to be validated. — set_phase","text":"group might choose combine two different phases, due complications associated PASS1A/1C. choose combine two phases, CAS must provide new file metadata_phase.txt single line, example: PASS1A-06|PASS1C-06. function checks file available, set phase phases validate. summary, order preference : function's argument: dmaqc_phase2validate (provided validation functions) metadata_phase.txt file available batch folder. Phase folder structure","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/set_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the phase to be validated. — set_phase","text":"","code":"set_phase(input_results_folder, dmaqc_phase2validate, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/set_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the phase to be validated. — set_phase","text":"input_results_folder (char) path PROCESSED/RESULTS folder check dmaqc_phase2validate (data.frame) dmaqc shipping information verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/set_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the phase to be validated. — set_phase","text":"(int) phase validated.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/sex_abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"sex abbreviations — sex_abbr","title":"sex abbreviations — sex_abbr","text":"sex abbreviations","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/sex_abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sex abbreviations — sex_abbr","text":"","code":"sex_abbr"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/sex_abbr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"sex abbreviations — sex_abbr","text":"object class character length 4.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/sex_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"sex colors — sex_cols","title":"sex colors — sex_cols","text":"sex colors","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/sex_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sex colors — sex_cols","text":"","code":"sex_cols"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/sex_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"sex colors — sex_cols","text":"object class character length 6.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"tissue abbreviations — tissue_abbr","title":"tissue abbreviations — tissue_abbr","text":"tissue abbreviations","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tissue abbreviations — tissue_abbr","text":"","code":"tissue_abbr"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_abbr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"tissue abbreviations — tissue_abbr","text":"object class character length 60.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"tissue colors — tissue_cols","title":"tissue colors — tissue_cols","text":"tissue colors","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tissue colors — tissue_cols","text":"","code":"tissue_cols"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"tissue colors — tissue_cols","text":"object class character length 88.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_order.html","id":null,"dir":"Reference","previous_headings":"","what":"tissue order — tissue_order","title":"tissue order — tissue_order","text":"tissue order","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tissue order — tissue_order","text":"","code":"tissue_order"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/tissue_order.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"tissue order — tissue_order","text":"object class character length 21.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"extract ASSAY from input folder path — validate_assay","title":"extract ASSAY from input folder path — validate_assay","text":"extract ASSAY input folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract ASSAY from input folder path — validate_assay","text":"","code":"validate_assay(input_results_folder)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract ASSAY from input folder path — validate_assay","text":"input_results_folder (char) input_results_folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract ASSAY from input folder path — validate_assay","text":"(vector) ASSAY code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"extract BATCH_YYYYMMDD folder — validate_batch","title":"extract BATCH_YYYYMMDD folder — validate_batch","text":"extract BATCH_YYYYMMDD folder input folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract BATCH_YYYYMMDD folder — validate_batch","text":"","code":"validate_batch(input_results_folder)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract BATCH_YYYYMMDD folder — validate_batch","text":"input_results_folder (char) input_results_folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract BATCH_YYYYMMDD folder — validate_batch","text":"(vector) BATCH_YYYYMMDD folder name","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_cas.html","id":null,"dir":"Reference","previous_headings":"","what":"validate cas code — validate_cas","title":"validate cas code — validate_cas","text":"validate CAS code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_cas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate cas code — validate_cas","text":"","code":"validate_cas(cas)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_cas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate cas code — validate_cas","text":"cas (char) cas code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_dates_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate date-time format in a data frame column — validate_dates_times","title":"Validate date-time format in a data frame column — validate_dates_times","text":"function validates values specified column given data frame adhere date-time format: \"MM/DD/YYYY HH:MM:SS /PM\". value comply format, prints values.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_dates_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate date-time format in a data frame column — validate_dates_times","text":"","code":"validate_dates_times(df, column_name, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_dates_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate date-time format in a data frame column — validate_dates_times","text":"df data frame containing column validated. column_name name column df contains date-time values. verbose Logical. TRUE, messages printed console.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_dates_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate date-time format in a data frame column — validate_dates_times","text":"function returns number issues detected","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_dates_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate date-time format in a data frame column — validate_dates_times","text":"","code":"df <- data.frame(id = 1:6,                  datetime = c(\"12/31/2023 11:59:59 PM\", \"01/01/2024 00:00:00 AM\",                                 \"02/29/2024 12:00:00 PM\", \"13/01/2024 01:00:00 PM\",                                 \"02/28/2024 24:00:00 PM\", \"02/30/2024 12:00:00 PM\")) validate_dates_times(df, \"datetime\", TRUE) #>    - (-)`datetime`: Values in incorrect format: `13/01/2024 01:00:00 PM, 02/30/2024 12:00:00 PM` #> [1] 1"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lab.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate LAB Assay Data — validate_lab","title":"Validate LAB Assay Data — validate_lab","text":"function validates LAB assay data based set criteria, including folder structure, metadata, file contents. supports optional functionalities like creating PDF report DMAQC validation (data available BIC).","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate LAB Assay Data — validate_lab","text":"","code":"validate_lab(   input_results_folder,   cas,   return_n_issues = FALSE,   full_report = FALSE,   f_proof = FALSE,   printPDF = FALSE,   out_qc_folder = NULL,   dmaqc_shipping_info = NULL,   dmaqc_phase2validate = FALSE,   validate_uniprot = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate LAB Assay Data — validate_lab","text":"input_results_folder string representing path folder containing LAB assay results validated. cas character string indicating CAS number. return_n_issues Logical; TRUE, function returns number detected issues. full_report Logical; TRUE, generates full report validation process. f_proof Logical; TRUE, generates proof plots data validation. printPDF Logical; TRUE f_proof TRUE, saves plots PDF file. , provide desired path output PDF file argument out_qc_folder. out_qc_folder Optional; string specifying path folder output PDF saved (printPDF = TRUE). Default: current working directory. dmaqc_shipping_info (character) File path DMAQC file. BIC can use argument. dmaqc_phase2validate (character) Provide phase validate. argument required since extracted input folder new required file metadata_phase.txt. Please ignore. However, argument provided, take priority phase. validate_uniprot Logical; TRUE, validates UniProt database. verbose Logical; TRUE, prints detailed messages validation.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate LAB Assay Data — validate_lab","text":"Depending settings, function may return number issues found, generate reports plots, simply perform validation without returning anything.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate LAB Assay Data — validate_lab","text":"","code":"if (FALSE) { # \\dontrun{ validate_lab(\"/path/to/results\", cas = \"broad_rg\", return_n_issues = TRUE) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lc_column_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate 'lc_column_id' column — validate_lc_column_id","title":"Validate 'lc_column_id' column — validate_lc_column_id","text":"function checks 'lc_column_id' column provided data frame ensure exists, contains NA values, contains spaces entries. also reports number unique values column.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lc_column_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate 'lc_column_id' column — validate_lc_column_id","text":"","code":"validate_lc_column_id(df, column_name, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lc_column_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate 'lc_column_id' column — validate_lc_column_id","text":"df data frame contain 'lc_column_id' column. column_name name column df contains date-time values. verbose logical indicating whether print informative messages. Default TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lc_column_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate 'lc_column_id' column — validate_lc_column_id","text":"invisible NULL. function used mainly side effects (.e., printing validation results).","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_lc_column_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate 'lc_column_id' column — validate_lc_column_id","text":"","code":"df <- data.frame(lc_column_id = c(\"id1\", \"id2\", \"id3\", \"id1\", \"id 2\", NA)) validate_lc_column_id(df, column_name = \"lc_column_id\") #>    - (-) NA values detected in column ` lc_column_id `: FAIL #>    - (-) Spaces detected in column `lc_column_id`: FAIL #>    - ( ) Number of unique values in column ` lc_column_id `:  5 #>    - (!) Warning: the number of LC columns might be too high. Please, revise  #> [1] 2"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_metabolomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a Metabolomics submission — validate_metabolomics","title":"Validate a Metabolomics submission — validate_metabolomics","text":"Validate Metabolomics submission","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_metabolomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a Metabolomics submission — validate_metabolomics","text":"","code":"validate_metabolomics(   input_results_folder,   cas,   return_n_issues = FALSE,   full_report = FALSE,   f_proof = FALSE,   printPDF = TRUE,   out_qc_folder = NULL,   dmaqc_shipping_info = NULL,   dmaqc_phase2validate = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_metabolomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a Metabolomics submission — validate_metabolomics","text":"input_results_folder (char) path PROCESSED folder check cas (char) CAS code return_n_issues (logical) TRUE returns number issues full_report (logical) FALSE (default) returns total number issues. TRUE returns details number issues (group files, e.g., results, metadata_metabolites, etc) f_proof (logical) generate charts including: Sample intensity distribution Unique ID counts NA values printPDF (logical) f_proof = TRUE,  printPDF = TRUE (default) prints plots pdf file argument out_qc_folder provided. out_qc_folder (char) Folder save pdfs (printPDF = TRUE). create folder exist. argument provided, files written working directory dmaqc_shipping_info (char) File path DMAQC file. BIC can use argument dmaqc_phase2validate (char) Provide phase validate. argument required since extracted input folder new required file metadata_phase.txt. Please, ignore. However, argument provided, take priority phase. metadata_phase.txt ignored). Examples Folder PASS1A-06: type either PASS1A-06 leave NULL PASS1A-06 PASS1C-06: type PASS1A-06|PASS1C-06 PASS1C-06: type PASS1C-06 verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_metabolomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a Metabolomics submission — validate_metabolomics","text":"(data.frame) Summary issues","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_na_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Column for NA and Empty Values — validate_na_empty","title":"Validate Column for NA and Empty Values — validate_na_empty","text":"function checks specified column data frame contains either NA empty values.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_na_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Column for NA and Empty Values — validate_na_empty","text":"","code":"validate_na_empty(df, col_name, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_na_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Column for NA and Empty Values — validate_na_empty","text":"df data frame. col_name character string specifying name column check. verbose logical indicating whether print informative messages. Default TRUE.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_na_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Column for NA and Empty Values — validate_na_empty","text":"Number issues","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_na_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Column for NA and Empty Values — validate_na_empty","text":"","code":"df <- data.frame(A = c(\"a\", \"\", NA, \"d\"), B = 1:4) validate_na_empty(df, \"A\") #>    - (-) NA values detected in column ` A `: FAIL #>    - (-) Empty values detected in column ` A `: FAIL #> [1] 2"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_olink.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Olink Data — validate_olink","title":"Validate Olink Data — validate_olink","text":"function validates Olink data based set criteria, including folder structure, metadata, file contents. supports optional functionalities like creating PDF report DMAQC validation (data available BIC)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_olink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Olink Data — validate_olink","text":"","code":"validate_olink(   input_results_folder,   cas,   return_n_issues = FALSE,   full_report = FALSE,   f_proof = FALSE,   printPDF = FALSE,   out_qc_folder = NULL,   dmaqc_shipping_info = NULL,   dmaqc_phase2validate = FALSE,   validate_uniprot = FALSE,   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_olink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Olink Data — validate_olink","text":"input_results_folder string representing path folder containing Olink results validated. cas character string indicating CAS number. return_n_issues Logical; TRUE, function returns number detected issues. full_report Logical; TRUE, generates full report validation process. f_proof Logical; TRUE, generates proof plots data validation. printPDF Logical; TRUE f_proof TRUE, saves plots PDF file, case, provide desired path output PDF file argument out_qc_folder out_qc_folder Optional; string specifying path folder output PDF saved (printPDF = TRUE). Default: current working directory dmaqc_shipping_info (char) File path DMAQC file. BIC can use argument dmaqc_phase2validate (char) Provide phase validate. argument required since extracted input folder new required file metadata_phase.txt. Please, ignore. However, argument provided, take priority phase. validate_uniprot Logical; TRUE, validates UniProt database. verbose Logical; TRUE, prints detailed messages validation.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_olink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Olink Data — validate_olink","text":"Depending settings, function may return number issues found, generate reports plots, simply perform validation without returning anything.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_olink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Olink Data — validate_olink","text":"","code":"if (FALSE) { # \\dontrun{ validate_olink(\"/path/to/results\", cas = \"broad_rg\", return_n_issues = TRUE) } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract PHASE from input folder path — validate_phase","title":"Extract PHASE from input folder path — validate_phase","text":"extract ASSAY input folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract PHASE from input folder path — validate_phase","text":"","code":"validate_phase(input_results_folder, return_phase = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract PHASE from input folder path — validate_phase","text":"input_results_folder (char) input_results_folder path return_phase (char) return phase TRUE (default)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract PHASE from input folder path — validate_phase","text":"(vector) PHASE code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_processFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"extract PROCESSED_YYYYMMDD folder from input folder path — validate_processFolder","title":"extract PROCESSED_YYYYMMDD folder from input folder path — validate_processFolder","text":"extract PROCESSED_YYYYMMDD folder input folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_processFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract PROCESSED_YYYYMMDD folder from input folder path — validate_processFolder","text":"","code":"validate_processFolder(input_results_folder)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_processFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract PROCESSED_YYYYMMDD folder from input folder path — validate_processFolder","text":"input_results_folder (char) input_results_folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_processFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract PROCESSED_YYYYMMDD folder from input folder path — validate_processFolder","text":"(vector) PROCESSED_YYYYMMDD folder name","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_proteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a Proteomics submissions — validate_proteomics","title":"Validate a Proteomics submissions — validate_proteomics","text":"Validate Proteomics submission","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_proteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a Proteomics submissions — validate_proteomics","text":"","code":"validate_proteomics(   input_results_folder,   isPTM,   cas,   dmaqc_shipping_info = NULL,   dmaqc_phase2validate = FALSE,   f_proof = FALSE,   out_qc_folder = NULL,   return_n_issues = TRUE,   full_report = FALSE,   printPDF = TRUE,   verbose = TRUE,   check_only_results = FALSE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_proteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a Proteomics submissions — validate_proteomics","text":"input_results_folder (char) path PROCESSED folder check isPTM (logical) TRUE Post-Translational-Modification proteomics assay cas (char) CAS code dmaqc_shipping_info (char) DMAQC file shipping information. provided (default), DMQAC validation peformed (done BIC) dmaqc_phase2validate (char) Provide phase validate. argument required since extracted input folder new required file metadata_phase.txt. However, argument provided, take priority (phase input folder metadata_phase.txt ignored). Examples Folder PASS1A-06: type either PASS1A-06 leave NULL PASS1A-06 PASS1C-06: type PASS1A-06|PASS1C-06 PASS1C-06: type PASS1C-06 f_proof (char) print pdf charts including: Reported Ion Intensity boxplot distribution percentage NA values per sample Ratio: ratio boxplot distribution percentage NA values per samples out_qc_folder (char) f_proof TRUE, folder must provided return_n_issues (logical) TRUE (default) returns number issues full_report (logical) FALSE (default) returns total number issues. TRUE returns details number issues (group files, e.g., results, metadata_metabolites, etc) printPDF (logical) TRUE (default print plots pdf) verbose (logical) TRUE (default) prints QC details. check_only_results (logical) TRUE, validates results (default FALSE)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_proteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a Proteomics submissions — validate_proteomics","text":"(data.frame) Summary issues","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_refmetname.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate refmet_name — validate_refmetname","title":"Validate refmet_name — validate_refmetname","text":"Validate refment_name using Metabolomics Workbench API","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_refmetname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate refmet_name — validate_refmetname","text":"","code":"validate_refmetname(dataf, verbose)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_refmetname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate refmet_name — validate_refmetname","text":"dataf (data.frame) Data frame refmet_name column verbose (logical) TRUE (default) shows messages)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_refmetname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate refmet_name — validate_refmetname","text":"(numeric) number refmet_name ids available RefMet","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_tissue.html","id":null,"dir":"Reference","previous_headings":"","what":"extract and validate TISSUE CODE from input folder path — validate_tissue","title":"extract and validate TISSUE CODE from input folder path — validate_tissue","text":"extract validate TISSUE CODE input folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_tissue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract and validate TISSUE CODE from input folder path — validate_tissue","text":"","code":"validate_tissue(input_results_folder)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_tissue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract and validate TISSUE CODE from input folder path — validate_tissue","text":"input_results_folder (char) input_results_folder path","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_tissue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract and validate TISSUE CODE from input folder path — validate_tissue","text":"(vector) PHASE code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_two_phases.html","id":null,"dir":"Reference","previous_headings":"","what":"validate a phase with two phases (pass1a and 1c) — validate_two_phases","title":"validate a phase with two phases (pass1a and 1c) — validate_two_phases","text":"function works validate two phases reported example, 'PASS1A-06|PASS1C-06' using separator '|'","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_two_phases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate a phase with two phases (pass1a and 1c) — validate_two_phases","text":"","code":"validate_two_phases(phase_details, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_two_phases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate a phase with two phases (pass1a and 1c) — validate_two_phases","text":"phase_details (char) expected output set_phase verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_two_phases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate a phase with two phases (pass1a and 1c) — validate_two_phases","text":"(char) expected phase_details function","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_uniprot_ids_with_uniprot.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate UniProt IDs — validate_uniprot_ids_with_uniprot","title":"Validate UniProt IDs — validate_uniprot_ids_with_uniprot","text":"function checks given vector IDs valid UniProt IDs. removes NA values, empty strings, white spaces validation. remaining ID checked UniProt database. function outputs boolean value indicating whether IDs valid. also prints messages ID fails validation.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_uniprot_ids_with_uniprot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate UniProt IDs — validate_uniprot_ids_with_uniprot","text":"","code":"validate_uniprot_ids_with_uniprot(ids)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_uniprot_ids_with_uniprot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate UniProt IDs — validate_uniprot_ids_with_uniprot","text":"ids character vector potential UniProt IDs.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_uniprot_ids_with_uniprot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate UniProt IDs — validate_uniprot_ids_with_uniprot","text":"boolean value. TRUE non-NA, non-empty, non-whitespace IDs input vector valid UniProt IDs; FALSE otherwise.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_uniprot_ids_with_uniprot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Validate UniProt IDs — validate_uniprot_ids_with_uniprot","text":"function requires internet connection access UniProt database. uses 'httr' package HTTP requests. function can slow large datasets due multiple web requests. Also, aware potential rate limits access restrictions UniProt API.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_uniprot_ids_with_uniprot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate UniProt IDs — validate_uniprot_ids_with_uniprot","text":"","code":"# VALID ids1 <- c(\"P12345\", \"Q67890\", NA, \"\", \" \") if(validate_uniprot_ids_with_uniprot(ids1)) print(\"Valid UNIPROT IDs\") #> [1] \"Valid UNIPROT IDs\" ids2 <- c(\"P12345\", \"Q67890\", NA, \"\", \" \", \"iamwrong\") if(!validate_uniprot_ids_with_uniprot(ids1)) print(\"Invalid UNIPROT IDs\")"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_yyyymmdd_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate YYYY-MM-DD Dates in a Data Frame — validate_yyyymmdd_dates","title":"Validate YYYY-MM-DD Dates in a Data Frame — validate_yyyymmdd_dates","text":"Validate Dates Specified Column Data Frame","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_yyyymmdd_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate YYYY-MM-DD Dates in a Data Frame — validate_yyyymmdd_dates","text":"","code":"validate_yyyymmdd_dates(df, date_column, verbose = TRUE)"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_yyyymmdd_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate YYYY-MM-DD Dates in a Data Frame — validate_yyyymmdd_dates","text":"df data frame contains date information validated. date_column character string specifying name column df contains dates validated. verbose logical value indicating whether print messages (default: TRUE).","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_yyyymmdd_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate YYYY-MM-DD Dates in a Data Frame — validate_yyyymmdd_dates","text":"number issues found","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_yyyymmdd_dates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate YYYY-MM-DD Dates in a Data Frame — validate_yyyymmdd_dates","text":"function checks validity dates specified column given data frame. Valid dates format YYYY-MM-DD, year values 2018 2026, month values 1 12, day values 1 31. function prints list invalid dates success message dates valid.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/validate_yyyymmdd_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate YYYY-MM-DD Dates in a Data Frame — validate_yyyymmdd_dates","text":"","code":"df <- data.frame(   extraction_date = c(\"2022-01-31\", \"2023-12-01\", \"2025-11-30\"),   other_column = 1:3 ) ic <- validate_yyyymmdd_dates(df, \"extraction_date\") #>   + (+) `extraction_date`: All dates are valid."},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_lab_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"Write LAB Data Release — write_lab_releases","title":"Write LAB Data Release — write_lab_releases","text":"Write LAB data releases. function check whether data submitted according guidelines; assumes data already validated ready release.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_lab_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write LAB Data Release — write_lab_releases","text":"","code":"write_lab_releases(   input_results_folder,   folder_name = \"motrpac_release\",   folder_root = NULL,   version_file = \"v1.0\",   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_lab_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write LAB Data Release — write_lab_releases","text":"input_results_folder (character) Path PROCESSED_YYYYMMDD folder containing LAB data. folder_name (character) Output folder name. Default \"motrpac_release\". folder_root (character) Absolute path output folder created. Default current working directory. version_file (character) File version number (e.g., \"v1.0\"). Default \"v1.0\". verbose (logical) TRUE (default), displays messages processing.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_lab_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write LAB Data Release — write_lab_releases","text":"Creates BIC release folder file structure: PHASE/OMICS/TCODE_NAME/ASSAY/, writes files names: motrpac_phase-code_tissuecode_assay_file-details-version.txt, file-details can : metadata-analyte, metadata-samples, results","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_lab_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write LAB Data Release — write_lab_releases","text":"","code":"if (FALSE) { # \\dontrun{ write_lab_releases(    input_results_folder = \"/full/path/to/PROCESSED_YYYYMMDD/\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_metabolomics_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"Write metabolomics data release — write_metabolomics_releases","title":"Write metabolomics data release — write_metabolomics_releases","text":"Write metabolomics data releases. check whether data submited according guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_metabolomics_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write metabolomics data release — write_metabolomics_releases","text":"","code":"write_metabolomics_releases(   input_results_folder,   cas,   folder_name = \"motrpac_release\",   folder_root = NULL,   version_file = \"v1.0\",   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_metabolomics_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write metabolomics data release — write_metabolomics_releases","text":"input_results_folder (char) Path PROCESSED_YYYYMMDD folder cas (char) Chemical Analytical Site code (e.g \"umichigan\") folder_name (char) output files name. Must .yaml extension. folder_root (char) absolute path write output files. Default: current directory version_file (char) file version number (v#.#) verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_metabolomics_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write metabolomics data release — write_metabolomics_releases","text":"bic release folder/file structure PHASE/OMICS/TCODE_NAME/ASSAY/ file names, including: motrpac_YYYYMMDD_phasecode_tissuecode_omics_assay_file-details.txt files-details can : named-experimentalDetails.txt named-metadata-metabolites.txt metadata-samples.txt named-results.txt","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_metabolomics_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write metabolomics data release — write_metabolomics_releases","text":"","code":"if (FALSE) { # \\dontrun{ write_metabolomics_releases(input_results_folder = \"/path/to/PROCESSED_YYYYMMDD/\",  cas = \"umichigan\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_olink_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"Write olink data release — write_olink_releases","title":"Write olink data release — write_olink_releases","text":"Write olink data releases. check whether data submited according guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_olink_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write olink data release — write_olink_releases","text":"","code":"write_olink_releases(   input_results_folder,   folder_name = \"motrpac_release\",   folder_root = NULL,   version_file = \"v1.0\",   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_olink_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write olink data release — write_olink_releases","text":"input_results_folder (char) Path RESULTS_YYYYMMDD folder folder_name (char) output folder name. folder_root (char) absolute path write output folder. Default: current directory version_file (char) file version number (v#.#) verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_olink_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write olink data release — write_olink_releases","text":"bic release folder/file structure PHASE/OMICS/TCODE_NAME/ASSAY/ file names, including: motrpac_phase-code_tissuecode_assay_file-details-version.txt files-details can : metadata-proteins, metadata-samples, results","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_olink_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write olink data release — write_olink_releases","text":"","code":"if (FALSE) { # \\dontrun{ write_olink_releases(    input_results_folder = \"/full/path/to/RESULTS_YYYYMMDD/\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_proteomics_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"Write proteomics data release — write_proteomics_releases","title":"Write proteomics data release — write_proteomics_releases","text":"Write proteomics data releases. check whether data submited according guidelines","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_proteomics_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write proteomics data release — write_proteomics_releases","text":"","code":"write_proteomics_releases(   input_results_folder,   folder_name = \"motrpac_release\",   folder_root = NULL,   version_file = \"v1.0\",   verbose = TRUE )"},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_proteomics_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write proteomics data release — write_proteomics_releases","text":"input_results_folder (char) Path RESULTS_YYYYMMDD folder folder_name (char) output folder name. folder_root (char) absolute path write output folder. Default: current directory version_file (char) file version number (v#.#) verbose (logical) TRUE (default) shows messages","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_proteomics_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write proteomics data release — write_proteomics_releases","text":"bic release folder/file structure PHASE/OMICS/TCODE_NAME/ASSAY/ file names, including: motrpac_YYYYMMDD_phasecode_tissuecode_omics_assay_file-details.txt files-details can : rii-results.txt, ratio-results.txt, vial-metadata.txt","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/reference/write_proteomics_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write proteomics data release — write_proteomics_releases","text":"","code":"if (FALSE) { # \\dontrun{ write_proteomics_releases(    input_results_folder = \"/full/path/to/RESULTS_YYYYMMDD/\") } # }"},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-100-2025-04-23","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 1.0.0 (2025-04-23)","title":"MotrpacBicQC 1.0.0 (2025-04-23)","text":"assay_short_text: Abbreviated name specific assay can used graphs tables needed ome_text: Omic class measured given assay","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-099-2025-04-22","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.9 (2025-04-22)","title":"MotrpacBicQC 0.9.9 (2025-04-22)","text":"Fix minor issue dl_read_gcp","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-098-2025-04-10","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.8 (2025-04-10)","title":"MotrpacBicQC 0.9.8 (2025-04-10)","text":"Update dl_read_gcp: now supports gcloud addition gsutil.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-097-2025-03-16","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.7 (2025-03-16)","title":"MotrpacBicQC 0.9.7 (2025-03-16)","text":"QC Support clinical chemistry assays: glucagon, insulin, cortisol, creatine kinase. also expects conventional metabolites, previously metab-t-conv, new assay withing category (lab-conv) Numerous bug fixes enhancements","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-096-2024-09-23","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.6 (2024-09-23)","title":"MotrpacBicQC 0.9.6 (2024-09-23)","text":"Download read file GCP function can create recursive folders (@christopherjin) Adjustments metabolomics metadata sample files QC enable processing old submissions (batch related variables required)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-095-2024-05-22","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.5 (2024-05-22)","title":"MotrpacBicQC 0.9.5 (2024-05-22)","text":"Proteomics: provide QC support TMT-18","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-094-2024-05-16","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.4 (2024-05-16)","title":"MotrpacBicQC 0.9.4 (2024-05-16)","text":"Check gsutil path correct report back user Handle spaces folder names (although recommended) Improve detecting source errors Improve verbosity feedback user","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-093-2024-03-25","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.3 (2024-03-25)","title":"MotrpacBicQC 0.9.3 (2024-03-25)","text":"Critical update validate_refmetname: ensure checking refmet standarized name. Update refmet tests Update REST service url Update Documentation Remove dependency data.table Enhance: one metadata_phase file allowed Enhance dl_read_gcp: replace data table read_delim Enhance open_file: accept tab delimited files","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-092-2024-03-04","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.2 (2024-03-04)","title":"MotrpacBicQC 0.9.2 (2024-03-04)","text":"Critical Update: Resolved issue validation refmet names compromised due updates Metabolomics Workbench REST service. version introduces adjustments ensure accurate validation refmet names.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-091-2024-02-02","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.1 (2024-02-02)","title":"MotrpacBicQC 0.9.1 (2024-02-02)","text":"New assays: PROT_OX Fix package conflicts OLINK: write release adjustments","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-090-2024-01-04","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.9.0 (2024-01-04)","title":"MotrpacBicQC 0.9.0 (2024-01-04)","text":"Add support OLINK datasets (check olink_qc vignette find ) Adjust function download data GCP (dl_read_gcp): automatically detects operating system (arguments ignore_std_err ignore_std_out deprecated) Multiple fixes enhancements","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-089-2023-07-07","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.9 (2023-07-07)","title":"MotrpacBicQC 0.8.9 (2023-07-07)","text":"Fix bug preventing processing BICRESULTS folders (proteomics) Make clear metadata_phase.txt file required enhancements","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-088-2023-06-15","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.8 (2023-06-15)","title":"MotrpacBicQC 0.8.8 (2023-06-15)","text":"Add 24 hours time support acquisition_date (MM/DD/YYYY HH:MM:SS)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-087-2023-05-22","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.7 (2023-05-22)","title":"MotrpacBicQC 0.8.7 (2023-05-22)","text":"Add QC new required batching variables Replace deprecated ggplot function Fix issues dl_read_gcp adjustments","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-086-2023-04-21","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.6 (2023-04-21)","title":"MotrpacBicQC 0.8.6 (2023-04-21)","text":"Minor adjustments","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-085-2023-03-18","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.5 (2023-03-18)","title":"MotrpacBicQC 0.8.5 (2023-03-18)","text":"New tissue codes, abbreviations, colors available lateral Gastrocnemius vena cava","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-084-2023-02-20","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.4 (2023-02-20)","title":"MotrpacBicQC 0.8.4 (2023-02-20)","text":"Add new dl_read_gcp Replace dplyr summarise function (deprecated) reframe Fix bug affecting proteomics_plots","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-083-2023-02-08","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.3 (2023-02-08)","title":"MotrpacBicQC 0.8.3 (2023-02-08)","text":"Fix typo","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-081-and-082-2023-02-08","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.1 and 0.8.2 (2023-02-08)","title":"MotrpacBicQC 0.8.1 and 0.8.2 (2023-02-08)","text":"Fix bug affecting IMM assays","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-080-2023-02-05","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.8.0 (2023-02-05)","title":"MotrpacBicQC 0.8.0 (2023-02-05)","text":"New metabolomics targeted assays (IMM_GLC, IMM_INS, IMM_CTR) Remove exception non-unique raw files allowed CONV assays, added IMM assays Improve metabolomics documentation","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-079-2023-01-12","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.9 (2023-01-12)","title":"MotrpacBicQC 0.7.9 (2023-01-12)","text":"Add exception: unique raw files now required metabolomics CONV assay Update assay_codes: immunoassay/IMMUNO added. table now also includes assay hex colours assay abbreviation","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-078-2022-12-13","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.8 (2022-12-13)","title":"MotrpacBicQC 0.7.8 (2022-12-13)","text":"Bug fix","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-077-2022-12-08","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.7 (2022-12-08)","title":"MotrpacBicQC 0.7.7 (2022-12-08)","text":"Proteomics RII plots skipped dataset large Larger pdf size proteomics ratio plots Several improvements enhancements","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-076-2022-10-27","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.6 (2022-10-27)","title":"MotrpacBicQC 0.7.6 (2022-10-27)","text":"Improve DMAQC validation","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-075-2022-10-21","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.5 (2022-10-21)","title":"MotrpacBicQC 0.7.5 (2022-10-21)","text":"Update write_proteomics according latest updates data/file structure Fix bugs affecting metabolomics_qc checks file_manifest","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-074-2022-10-09","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.4 (2022-10-09)","title":"MotrpacBicQC 0.7.4 (2022-10-09)","text":"Metabolomics plots: check enough compounds generate plots Update assay_codes: conventional assays code added (CONV)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-073-2022-10-02","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.3 (2022-10-02)","title":"MotrpacBicQC 0.7.3 (2022-10-02)","text":"Adjustments generate data releases (deal pass1a/1c) Version number added upcoming releases","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-072-2022-09-22","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.2 (2022-09-22)","title":"MotrpacBicQC 0.7.2 (2022-09-22)","text":"Update package’s dependency","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-071-2022-09-17","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.1 (2022-09-17)","title":"MotrpacBicQC 0.7.1 (2022-09-17)","text":"Updates affecting proteomics validation: validate_proteomics: rename argument run_by_bic check_only_results. Default still FALSE (affect CAS) Adjust size pdf output depending number samples Support BICRESULTS_YYYYMMDD folder validation (similar currently supported RESULTS_YYYYMMDD PROCESSED_YYYYMMDD folders). folder output proteomics pipeline run BIC","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-070-2022-08-25","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.7.0 (2022-08-25)","title":"MotrpacBicQC 0.7.0 (2022-08-25)","text":"Update motrpac color abbreviations","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-069-2022-07-09","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.9 (2022-07-09)","title":"MotrpacBicQC 0.6.9 (2022-07-09)","text":"Metabolomics: new density plots Code optimizations Bug fixes affecting file manifest checks","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-068-2022-04-11","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.8 (2022-04-11)","title":"MotrpacBicQC 0.6.8 (2022-04-11)","text":"Two phases combined batch (e.g., PASS1A-06|PASS1C-06) phase content different input folder name (e.g., PASS1C-06 might submitted input folder name PASS1A-06)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-067-2022-03-11","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.7 (2022-03-11)","title":"MotrpacBicQC 0.6.7 (2022-03-11)","text":"DMAQC validation: print missing vial labels Metabolomics QC: add mz/rt density plots","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-066-2022-03-03","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.6 (2022-03-03)","title":"MotrpacBicQC 0.6.6 (2022-03-03)","text":"Improve reporting handling required files Fix minor bugs","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-065-2022-02-28","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.5 (2022-02-28)","title":"MotrpacBicQC 0.6.5 (2022-02-28)","text":"Metabolomics: fix manifest checks.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-064-2022-02-27","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.4 (2022-02-27)","title":"MotrpacBicQC 0.6.4 (2022-02-27)","text":"Metabolomics: adjust metabolomic plots deal large number samples Metabolomics new plot: sum intensity/concentration Metabolomics: detects negative values Metabolomics: update vignette","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-063-2022-02-25","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.3 (2022-02-25)","title":"MotrpacBicQC 0.6.3 (2022-02-25)","text":"Proteomics: support tmt16 Metabolomics: Improve verbosity wrong tissue code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-062-2021-12-07","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.2 (2021-12-07)","title":"MotrpacBicQC 0.6.2 (2021-12-07)","text":"Fix bug affecting validation refmet_names Update data objects (immunoassay added)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-061-2021-09-06","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.1 (2021-09-06)","title":"MotrpacBicQC 0.6.1 (2021-09-06)","text":"Refactor validation refmet_name. now checks time using RefMet API. also validates multipeak isoforms function get_and_validate_mdd() donwload entire RefMet database (warning, >15MB) metabolomics_data_dictionary data object soon deprecated.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-060-2021-09-06","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.6.0 (2021-09-06)","title":"MotrpacBicQC 0.6.0 (2021-09-06)","text":"Support DMAQC validation human submissions","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-059-2021-08-10","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.9 (2021-08-10)","title":"MotrpacBicQC 0.5.9 (2021-08-10)","text":"Adjustments PASS1C-06 Bug fixes affecting HUMAN phase processing","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-058-2021-08-06","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.8 (2021-08-06)","title":"MotrpacBicQC 0.5.8 (2021-08-06)","text":"New Metabolomics QC plots: number proportion named vs unnamed features identified","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-057-2021-08-05","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.7 (2021-08-05)","title":"MotrpacBicQC 0.5.7 (2021-08-05)","text":"New proteomics QC plots protein coverage","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-056-2021-07-22","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.6 (2021-07-22)","title":"MotrpacBicQC 0.5.6 (2021-07-22)","text":"Bug fix","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-055-2021-07-21","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.5 (2021-07-21)","title":"MotrpacBicQC 0.5.5 (2021-07-21)","text":"Update: add human tissue codes","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-054-2021-07-16","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.4 (2021-07-16)","title":"MotrpacBicQC 0.5.4 (2021-07-16)","text":"Improved version checking file manifest metabolomics submissions Enable DMAQC validation submissions combining multiple phases (e.g. PASS1A-06 + PASS1C-06)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-053-2021-06-25","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.3 (2021-06-25)","title":"MotrpacBicQC 0.5.3 (2021-06-25)","text":"Metabolomics QC: new metabolomics QC plots, including number IDs per sample, intensity distribution, percentage NA values Markdown: Replace prettydoc rmdformats New assay code: CONV (Targeted Conventional metabolites clinical analytes, provided Duke)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-052-2021-06-23","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.2 (2021-06-23)","title":"MotrpacBicQC 0.5.2 (2021-06-23)","text":"New Phase: HUMAN (name new project folder human studies) Proteomics QC: new proteomics QC plot, number unique ids per sample Proteomics QC: improved QC plots","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-051-2021-05-03","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.1 (2021-05-03)","title":"MotrpacBicQC 0.5.1 (2021-05-03)","text":"New metabolomics sample_type: QC-ReCAS, Global reference biological material prepared ","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-050-2021-04-29","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.5.0 (2021-04-29)","title":"MotrpacBicQC 0.5.0 (2021-04-29)","text":"Update data dictionary (GTech’s kegg revision)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-049-2021-04-27","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.9 (2021-04-27)","title":"MotrpacBicQC 0.4.9 (2021-04-27)","text":"Bug fixes Update readme","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-048-2021-04-20","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.8 (2021-04-20)","title":"MotrpacBicQC 0.4.8 (2021-04-20)","text":"Proteomics QC: enable option check data processed BIC Bug fixes (color code)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-047-2021-04-02","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.7 (2021-04-02)","title":"MotrpacBicQC 0.4.7 (2021-04-02)","text":"Proteomics QC: update warnings affecting gene_symbol entrez_id missing ids Fix issue affecting Windows machines (Pierre J-B) Several Color code fixes * assay (Nicole G) Bug fixes","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-046-2021-03-26","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.6 (2021-03-26)","title":"MotrpacBicQC 0.4.6 (2021-03-26)","text":"New QC checks new proteomics requirements","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-045-2021-03-25","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.5 (2021-03-25)","title":"MotrpacBicQC 0.4.5 (2021-03-25)","text":"Broad Metabolomics revision (39 new kegg ids * minor corrections) targeted refmet_name Fix text warning case missing manifest file Add improve tests","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-044-2021-03-22","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.4 (2021-03-22)","title":"MotrpacBicQC 0.4.4 (2021-03-22)","text":"Fix improve check (new required) manifest file untargeted metabolomics datasets","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-043-2021-03-16","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.3 (2021-03-16)","title":"MotrpacBicQC 0.4.3 (2021-03-16)","text":"Update tissue_cols data object (Nicole Gay)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-042-2021-03-10","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.2 (2021-03-10)","title":"MotrpacBicQC 0.4.2 (2021-03-10)","text":"Fix bug validate_metabolomics affecting unnamed sample check","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-041-2021-03-08","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.1 (2021-03-08)","title":"MotrpacBicQC 0.4.1 (2021-03-08)","text":"Improved QC required manifest file (proteomics metabolomics)","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-040-2021-03-04","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.4.0 (2021-03-04)","title":"MotrpacBicQC 0.4.0 (2021-03-04)","text":"Metabolomics data dictionary available data object: metabolomics_data_dictionary function get_and_validate_mdd() still works, pull data Metabolomics Workbench. Just return metabolomics_data_dictionary Bug fix: manifest issue count now properly displays number issues detected.","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-039-2021-02-10","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.9 (2021-02-10)","title":"MotrpacBicQC 0.3.9 (2021-02-10)","text":"Bug fix: restore previous version bic_animal_tissue_code","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-038-2021-02-03","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.8 (2021-02-03)","title":"MotrpacBicQC 0.3.8 (2021-02-03)","text":"Add new assays","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-035-2020-10-20","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.5 (2020-10-20)","title":"MotrpacBicQC 0.3.5 (2020-10-20)","text":"Bug fix DMAQC deal missing data DMAQC table Proteomics: Address 130C missing channel issue affecting Broad Proteomics: add additional QC check point validate values vial_label column unique Proteomics: write_proteomics updated (required columns selected) Fix bugs typos","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-034-2020-10-15","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.4 (2020-10-15)","title":"MotrpacBicQC 0.3.4 (2020-10-15)","text":"Add check point expected files available manifest file","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-033-2020-10-14","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.3 (2020-10-14)","title":"MotrpacBicQC 0.3.3 (2020-10-14)","text":"Fix bugs affecting manifest files Adjustments files don’t meet requirements","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-032-2020-10-06","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.2 (2020-10-06)","title":"MotrpacBicQC 0.3.2 (2020-10-06)","text":"Check new required manifest file proteomics metabolomics submissions Raw file manifest now optional","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-031-2020-10-04","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.1 (2020-10-04)","title":"MotrpacBicQC 0.3.1 (2020-10-04)","text":"Proteomics write proteomics Proteomics load metabolomics","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-030-2020-09-21","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.3.0 (2020-09-21)","title":"MotrpacBicQC 0.3.0 (2020-09-21)","text":"Proteomics QC support","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-022-2020-08-09","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.2.2 (2020-08-09)","title":"MotrpacBicQC 0.2.2 (2020-08-09)","text":"New assays","code":""},{"path":"https://motrpac.github.io/MotrpacBicQC/news/index.html","id":"motrpacbicqc-021-2020-06-03","dir":"Changelog","previous_headings":"","what":"MotrpacBicQC 0.2.1 (2020-06-03)","title":"MotrpacBicQC 0.2.1 (2020-06-03)","text":"Bug fixes","code":""}]
